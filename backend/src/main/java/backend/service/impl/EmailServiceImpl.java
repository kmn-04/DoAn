package backend.service.impl;

import backend.entity.Booking;
import backend.entity.User;
import backend.service.EmailService;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.mail.SimpleMailMessage;
import org.springframework.mail.javamail.JavaMailSender;
import org.springframework.mail.javamail.MimeMessageHelper;
import org.springframework.scheduling.annotation.Async;
import org.springframework.stereotype.Service;

import jakarta.mail.internet.MimeMessage;
import java.text.NumberFormat;
import java.time.format.DateTimeFormatter;
import java.util.Locale;

@Service
@RequiredArgsConstructor
@Slf4j
public class EmailServiceImpl implements EmailService {
    
    private final JavaMailSender mailSender;
    
    @Value("${spring.mail.username:khoi14112004@gmail.com}")
    private String fromEmail;
    
    @Value("${app.name:Tour Booking System}")
    private String appName;
    
    @Value("${app.url:http://localhost:5173}")
    private String appUrl;
    
    private static final DateTimeFormatter DATE_FORMATTER = 
            DateTimeFormatter.ofPattern("dd/MM/yyyy");
    
    private static final NumberFormat CURRENCY_FORMATTER = 
            NumberFormat.getCurrencyInstance(new Locale("vi", "VN"));
    
    @Override
    @Async
    public void sendBookingConfirmationEmail(Booking booking) {
        try {
            String subject = String.format("[%s] X√°c nh·∫≠n ƒë·∫∑t tour - %s", 
                    appName, booking.getBookingCode());
            
            String body = buildBookingConfirmationHtml(booking);
            
            sendHtmlEmail(booking.getUser().getEmail(), subject, body);
            
            log.info("‚úÖ Sent booking confirmation email to: {}", booking.getUser().getEmail());
            
        } catch (Exception e) {
            log.error("‚ùå Failed to send booking confirmation email", e);
        }
    }
    
    @Override
    @Async
    public void sendPaymentConfirmationEmail(Booking booking) {
        try {
            String subject = String.format("[%s] X√°c nh·∫≠n thanh to√°n - %s", 
                    appName, booking.getBookingCode());
            
            String body = buildPaymentConfirmationHtml(booking);
            
            sendHtmlEmail(booking.getUser().getEmail(), subject, body);
            
            log.info("‚úÖ Sent payment confirmation email to: {}", booking.getUser().getEmail());
            
        } catch (Exception e) {
            log.error("‚ùå Failed to send payment confirmation email", e);
        }
    }
    
    @Override
    @Async
    public void sendBookingCancellationEmail(Booking booking, String reason) {
        try {
            String subject = String.format("[%s] H·ªßy booking - %s", 
                    appName, booking.getBookingCode());
            
            String body = buildBookingCancellationHtml(booking, reason);
            
            sendHtmlEmail(booking.getUser().getEmail(), subject, body);
            
            log.info("‚úÖ Sent booking cancellation email to: {}", booking.getUser().getEmail());
            
        } catch (Exception e) {
            log.error("‚ùå Failed to send booking cancellation email", e);
        }
    }
    
    @Override
    @Async
    public void sendBookingReminderEmail(Booking booking) {
        try {
            String subject = String.format("[%s] Nh·∫Øc nh·ªü tour s·∫Øp kh·ªüi h√†nh - %s", 
                    appName, booking.getTour().getName());
            
            String body = buildBookingReminderHtml(booking);
            
            sendHtmlEmail(booking.getUser().getEmail(), subject, body);
            
            log.info("‚úÖ Sent booking reminder email to: {}", booking.getUser().getEmail());
            
        } catch (Exception e) {
            log.error("‚ùå Failed to send booking reminder email", e);
        }
    }
    
    @Override
    @Async
    public void sendPasswordResetEmail(User user, String resetToken) {
        try {
            log.info("üîÑ Starting to send password reset email to: {}", user.getEmail());
            log.info("üìß From email: {}", fromEmail);
            log.info("üîó App URL: {}", appUrl);
            
            String subject = String.format("[%s] ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u", appName);
            
            String resetUrl = String.format("%s/reset-password/%s", appUrl, resetToken);
            log.info("üîó Reset URL: {}", resetUrl);
            
            String body = buildPasswordResetHtml(user, resetUrl);
            
            sendHtmlEmail(user.getEmail(), subject, body);
            
            log.info("‚úÖ Sent password reset email to: {}", user.getEmail());
            
        } catch (Exception e) {
            log.error("‚ùå Failed to send password reset email to: {}", user.getEmail(), e);
        }
    }
    
    @Override
    @Async
    public void sendWelcomeEmail(User user) {
        try {
            String subject = String.format("Ch√†o m·ª´ng ƒë·∫øn v·ªõi %s!", appName);
            
            String body = buildWelcomeHtml(user);
            
            sendHtmlEmail(user.getEmail(), subject, body);
            
            log.info("‚úÖ Sent welcome email to: {}", user.getEmail());
            
        } catch (Exception e) {
            log.error("‚ùå Failed to send welcome email", e);
        }
    }
    
    @Override
    @Async
    public void sendVerificationEmail(User user, String token) {
        try {
            String subject = String.format("üîê [%s] X√°c th·ª±c email c·ªßa b·∫°n", appName);
            
            String body = buildVerificationEmailHtml(user, token);
            
            sendHtmlEmail(user.getEmail(), subject, body);
            
            log.info("‚úÖ Sent verification email to: {}", user.getEmail());
            
        } catch (Exception e) {
            log.error("‚ùå Failed to send verification email", e);
        }
    }
    
    @Override
    @Async
    public void sendEmail(String to, String subject, String body) {
        try {
            SimpleMailMessage message = new SimpleMailMessage();
            message.setFrom(fromEmail);
            message.setTo(to);
            message.setSubject(subject);
            message.setText(body);
            
            mailSender.send(message);
            
            log.info("‚úÖ Sent email to: {}", to);
            
        } catch (Exception e) {
            log.error("‚ùå Failed to send email to: {}", to, e);
        }
    }
    
    @Override
    @Async
    public void sendHtmlEmail(String to, String subject, String htmlBody) {
        try {
            log.info("üìß Creating MimeMessage for: {}", to);
            log.info("üìß Subject: {}", subject);
            log.info("üìß From: {}", fromEmail);
            
            MimeMessage message = mailSender.createMimeMessage();
            MimeMessageHelper helper = new MimeMessageHelper(message, true, "UTF-8");
            
            helper.setFrom(fromEmail);
            helper.setTo(to);
            helper.setSubject(subject);
            helper.setText(htmlBody, true);
            
            log.info("üìß Sending email...");
            mailSender.send(message);
            
            log.info("‚úÖ Sent HTML email to: {}", to);
            
        } catch (Exception e) {
            log.error("‚ùå Failed to send HTML email to: {}", to, e);
            log.error("‚ùå Error details: {}", e.getMessage());
            if (e.getCause() != null) {
                log.error("‚ùå Root cause: {}", e.getCause().getMessage());
            }
        }
    }
    
    // ================== HTML Template Builders ==================
    
    private String buildBookingConfirmationHtml(Booking booking) {
        return String.format("""
                <html>
                <body style="font-family: Arial, sans-serif; line-height: 1.6; color: #333;">
                    <div style="max-width: 600px; margin: 0 auto; padding: 20px;">
                        <h2 style="color: #2563eb;">X√°c nh·∫≠n ƒë·∫∑t tour</h2>
                        <p>Xin ch√†o <strong>%s</strong>,</p>
                        <p>C·∫£m ∆°n b·∫°n ƒë√£ ƒë·∫∑t tour t·∫°i %s. ƒê√¢y l√† th√¥ng tin booking c·ªßa b·∫°n:</p>
                        
                        <div style="background: #f3f4f6; padding: 15px; border-radius: 8px; margin: 20px 0;">
                            <p><strong>M√£ booking:</strong> %s</p>
                            <p><strong>Tour:</strong> %s</p>
                            <p><strong>Ng√†y kh·ªüi h√†nh:</strong> %s</p>
                            <p><strong>S·ªë ng∆∞·ªùi:</strong> %d ng∆∞·ªùi l·ªõn, %d tr·∫ª em</p>
                            <p><strong>T·ªïng ti·ªÅn:</strong> %s</p>
                        </div>
                        
                        <p>Vui l√≤ng thanh to√°n ƒë·ªÉ x√°c nh·∫≠n booking c·ªßa b·∫°n.</p>
                        <p>Tr√¢n tr·ªçng,<br/>%s</p>
                    </div>
                </body>
                </html>
                """,
                booking.getUser().getName(),
                appName,
                booking.getBookingCode(),
                booking.getTour().getName(),
                booking.getStartDate().format(DATE_FORMATTER),
                booking.getNumAdults(),
                booking.getNumChildren(),
                CURRENCY_FORMATTER.format(booking.getFinalAmount()),
                appName
        );
    }
    
    private String buildPaymentConfirmationHtml(Booking booking) {
        return String.format("""
                <html>
                <body style="font-family: Arial, sans-serif; line-height: 1.6; color: #333;">
                    <div style="max-width: 600px; margin: 0 auto; padding: 20px;">
                        <h2 style="color: #16a34a;">Thanh to√°n th√†nh c√¥ng!</h2>
                        <p>Xin ch√†o <strong>%s</strong>,</p>
                        <p>Ch√∫ng t√¥i ƒë√£ nh·∫≠n ƒë∆∞·ª£c thanh to√°n c·ªßa b·∫°n cho booking <strong>%s</strong>.</p>
                        
                        <div style="background: #f0fdf4; padding: 15px; border-radius: 8px; margin: 20px 0; border-left: 4px solid #16a34a;">
                            <p><strong>Tour:</strong> %s</p>
                            <p><strong>S·ªë ti·ªÅn:</strong> %s</p>
                            <p><strong>Tr·∫°ng th√°i:</strong> ƒê√£ thanh to√°n</p>
                        </div>
                        
                        <p>Ch√∫c b·∫°n c√≥ m·ªôt chuy·∫øn ƒëi vui v·∫ª!</p>
                        <p>Tr√¢n tr·ªçng,<br/>%s</p>
                    </div>
                </body>
                </html>
                """,
                booking.getUser().getName(),
                booking.getBookingCode(),
                booking.getTour().getName(),
                CURRENCY_FORMATTER.format(booking.getFinalAmount()),
                appName
        );
    }
    
    private String buildBookingCancellationHtml(Booking booking, String reason) {
        return String.format("""
                <html>
                <body style="font-family: Arial, sans-serif; line-height: 1.6; color: #333;">
                    <div style="max-width: 600px; margin: 0 auto; padding: 20px;">
                        <h2 style="color: #dc2626;">H·ªßy booking</h2>
                        <p>Xin ch√†o <strong>%s</strong>,</p>
                        <p>Booking <strong>%s</strong> c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c h·ªßy.</p>
                        
                        <div style="background: #fef2f2; padding: 15px; border-radius: 8px; margin: 20px 0; border-left: 4px solid #dc2626;">
                            <p><strong>Tour:</strong> %s</p>
                            <p><strong>L√Ω do:</strong> %s</p>
                        </div>
                        
                        <p>N·∫øu b·∫°n c·∫ßn h·ªó tr·ª£, vui l√≤ng li√™n h·ªá v·ªõi ch√∫ng t√¥i.</p>
                        <p>Tr√¢n tr·ªçng,<br/>%s</p>
                    </div>
                </body>
                </html>
                """,
                booking.getUser().getName(),
                booking.getBookingCode(),
                booking.getTour().getName(),
                reason,
                appName
        );
    }
    
    private String buildBookingReminderHtml(Booking booking) {
        return String.format("""
                <html>
                <body style="font-family: Arial, sans-serif; line-height: 1.6; color: #333;">
                    <div style="max-width: 600px; margin: 0 auto; padding: 20px;">
                        <h2 style="color: #f59e0b;">Tour s·∫Øp kh·ªüi h√†nh!</h2>
                        <p>Xin ch√†o <strong>%s</strong>,</p>
                        <p>Tour <strong>%s</strong> c·ªßa b·∫°n s·∫Øp kh·ªüi h√†nh v√†o <strong>%s</strong>.</p>
                        
                        <div style="background: #fffbeb; padding: 15px; border-radius: 8px; margin: 20px 0; border-left: 4px solid #f59e0b;">
                            <p>Vui l√≤ng chu·∫©n b·ªã h√†nh l√Ω v√† c√≥ m·∫∑t ƒë√∫ng gi·ªù t·∫°i ƒëi·ªÉm h·∫πn.</p>
                        </div>
                        
                        <p>Ch√∫c b·∫°n c√≥ m·ªôt chuy·∫øn ƒëi tuy·ªát v·ªùi!</p>
                        <p>Tr√¢n tr·ªçng,<br/>%s</p>
                    </div>
                </body>
                </html>
                """,
                booking.getUser().getName(),
                booking.getTour().getName(),
                booking.getStartDate().format(DATE_FORMATTER),
                appName
        );
    }
    
    private String buildPasswordResetHtml(User user, String resetUrl) {
        return String.format("""
                <html>
                <body style="font-family: Arial, sans-serif; line-height: 1.6; color: #333;">
                    <div style="max-width: 600px; margin: 0 auto; padding: 20px;">
                        <h2 style="color: #2563eb;">ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u</h2>
                        <p>Xin ch√†o <strong>%s</strong>,</p>
                        <p>B·∫°n ƒë√£ y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u. Click v√†o link b√™n d∆∞·ªõi ƒë·ªÉ ƒë·∫∑t l·∫°i:</p>
                        
                        <div style="margin: 30px 0; text-align: center;">
                            <a href="%s" style="background: #2563eb; color: white; padding: 12px 24px; text-decoration: none; border-radius: 6px; display: inline-block;">
                                ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u
                            </a>
                        </div>
                        
                        <p style="color: #6b7280; font-size: 14px;">Link n√†y s·∫Ω h·∫øt h·∫°n sau 1 gi·ªù.</p>
                        <p style="color: #6b7280; font-size: 14px;">N·∫øu b·∫°n kh√¥ng y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u, vui l√≤ng b·ªè qua email n√†y.</p>
                        <p>Tr√¢n tr·ªçng,<br/>%s</p>
                    </div>
                </body>
                </html>
                """,
                user.getName(),
                resetUrl,
                appName
        );
    }
    
    private String buildWelcomeHtml(User user) {
        return String.format("""
                <html>
                <body style="font-family: Arial, sans-serif; line-height: 1.6; color: #333;">
                    <div style="max-width: 600px; margin: 0 auto; padding: 20px;">
                        <h2 style="color: #2563eb;">Ch√†o m·ª´ng ƒë·∫øn v·ªõi %s!</h2>
                        <p>Xin ch√†o <strong>%s</strong>,</p>
                        <p>C·∫£m ∆°n b·∫°n ƒë√£ ƒëƒÉng k√Ω t√†i kho·∫£n t·∫°i %s.</p>
                        
                        <div style="background: #eff6ff; padding: 15px; border-radius: 8px; margin: 20px 0;">
                            <p>B·∫°n c√≥ th·ªÉ b·∫Øt ƒë·∫ßu kh√°m ph√° c√°c tour du l·ªãch tuy·ªát v·ªùi c·ªßa ch√∫ng t√¥i ngay b√¢y gi·ªù!</p>
                        </div>
                        
                        <div style="margin: 30px 0; text-align: center;">
                            <a href="%s" style="background: #2563eb; color: white; padding: 12px 24px; text-decoration: none; border-radius: 6px; display: inline-block;">
                                Kh√°m ph√° tour
                            </a>
                        </div>
                        
                        <p>Tr√¢n tr·ªçng,<br/>%s</p>
                    </div>
                </body>
                </html>
                """,
                appName,
                user.getName(),
                appName,
                appUrl + "/tours",
                appName
        );
    }
    
    private String buildVerificationEmailHtml(User user, String token) {
        String verificationUrl = appUrl + "/auth/verify-email?token=" + token;
        
        return String.format("""
                <html>
                <body style="font-family: Arial, sans-serif; line-height: 1.6; color: #333;">
                    <div style="max-width: 600px; margin: 0 auto; padding: 20px;">
                        <div style="text-align: center; margin-bottom: 30px;">
                            <h1 style="color: #2563eb; margin: 0;">üîê X√°c th·ª±c Email</h1>
                        </div>
                        
                        <p>Xin ch√†o <strong>%s</strong>,</p>
                        <p>C·∫£m ∆°n b·∫°n ƒë√£ ƒëƒÉng k√Ω t√†i kho·∫£n t·∫°i <strong>%s</strong>!</p>
                        
                        <div style="background: #fef3c7; border-left: 4px solid #f59e0b; padding: 15px; margin: 20px 0;">
                            <p style="margin: 0; color: #92400e;">
                                ‚ö†Ô∏è <strong>B·∫°n c·∫ßn x√°c th·ª±c email ƒë·ªÉ s·ª≠ d·ª•ng t√†i kho·∫£n.</strong>
                            </p>
                        </div>
                        
                        <p>Vui l√≤ng nh·∫•n v√†o n√∫t b√™n d∆∞·ªõi ƒë·ªÉ x√°c th·ª±c email c·ªßa b·∫°n:</p>
                        
                        <div style="margin: 30px 0; text-align: center;">
                            <a href="%s" style="background: #2563eb; color: white; padding: 14px 28px; text-decoration: none; border-radius: 6px; display: inline-block; font-weight: bold;">
                                ‚úÖ X√°c th·ª±c Email
                            </a>
                        </div>
                        
                        <div style="background: #f3f4f6; padding: 15px; border-radius: 8px; margin: 20px 0;">
                            <p style="margin: 0; font-size: 14px; color: #6b7280;">
                                Ho·∫∑c copy link sau v√†o tr√¨nh duy·ªát:<br/>
                                <a href="%s" style="color: #2563eb; word-break: break-all;">%s</a>
                            </p>
                        </div>
                        
                        <div style="background: #fee2e2; border: 1px solid #fecaca; padding: 15px; border-radius: 8px; margin: 20px 0;">
                            <p style="margin: 0; font-size: 14px; color: #991b1b;">
                                ‚è∞ <strong>Link x√°c th·ª±c c√≥ hi·ªáu l·ª±c trong 24 gi·ªù.</strong><br/>
                                N·∫øu b·∫°n kh√¥ng ƒëƒÉng k√Ω t√†i kho·∫£n n√†y, vui l√≤ng b·ªè qua email n√†y.
                            </p>
                        </div>
                        
                        <hr style="border: none; border-top: 1px solid #e5e7eb; margin: 30px 0;"/>
                        
                        <p style="font-size: 14px; color: #6b7280;">
                            Tr√¢n tr·ªçng,<br/>
                            <strong>%s Team</strong>
                        </p>
                    </div>
                </body>
                </html>
                """,
                user.getName(),
                appName,
                verificationUrl,
                verificationUrl,
                verificationUrl,
                appName
        );
    }
    
    @Override
    @Async
    public void sendSimpleEmail(String to, String subject, String body) {
        try {
            SimpleMailMessage message = new SimpleMailMessage();
            message.setFrom(fromEmail);
            message.setTo(to);
            message.setSubject(subject);
            message.setText(body);
            
            mailSender.send(message);
            
            log.info("‚úÖ Sent simple email to: {}", to);
            
        } catch (Exception e) {
            log.error("‚ùå Failed to send simple email to: {}", to, e);
            throw new RuntimeException("Failed to send email", e);
        }
    }
    
    // ================== Loyalty Email Methods ==================
    
    @Override
    @Async
    public void sendPointsEarnedEmail(User user, int points, String source, String description) {
        try {
            String subject = String.format("üéâ [%s] B·∫°n v·ª´a nh·∫≠n ƒë∆∞·ª£c %d ƒëi·ªÉm th∆∞·ªüng!", appName, points);
            String body = buildPointsEarnedHtml(user, points, source, description);
            sendHtmlEmail(user.getEmail(), subject, body);
            log.info("‚úÖ Sent points earned email to: {}", user.getEmail());
        } catch (Exception e) {
            log.error("‚ùå Failed to send points earned email to: {}", user.getEmail(), e);
        }
    }
    
    @Override
    @Async
    public void sendLevelUpEmail(User user, String oldLevel, String newLevel, int pointsBalance) {
        try {
            String subject = String.format("üèÜ [%s] Ch√∫c m·ª´ng! B·∫°n ƒë√£ l√™n h·∫°ng %s!", appName, newLevel);
            String body = buildLevelUpHtml(user, oldLevel, newLevel, pointsBalance);
            sendHtmlEmail(user.getEmail(), subject, body);
            log.info("‚úÖ Sent level up email to: {}", user.getEmail());
        } catch (Exception e) {
            log.error("‚ùå Failed to send level up email to: {}", user.getEmail(), e);
        }
    }
    
    @Override
    @Async
    public void sendVoucherRedeemedEmail(User user, String voucherCode, int pointsCost, double voucherValue) {
        try {
            String subject = String.format("üéÅ [%s] B·∫°n ƒë√£ ƒë·ªïi voucher th√†nh c√¥ng!", appName);
            String body = buildVoucherRedeemedHtml(user, voucherCode, pointsCost, voucherValue);
            sendHtmlEmail(user.getEmail(), subject, body);
            log.info("‚úÖ Sent voucher redeemed email to: {}", user.getEmail());
        } catch (Exception e) {
            log.error("‚ùå Failed to send voucher redeemed email to: {}", user.getEmail(), e);
        }
    }
    
    // ================== Loyalty HTML Template Builders ==================
    
    private String buildPointsEarnedHtml(User user, int points, String source, String description) {
        String emoji = getSourceEmoji(source);
        return String.format("""
            <!DOCTYPE html>
            <html>
            <head>
                <meta charset="UTF-8">
                <style>
                    body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
                    .container { max-width: 600px; margin: 0 auto; padding: 20px; }
                    .header { background: linear-gradient(135deg, #667eea 0%%, #764ba2 100%%); color: white; padding: 30px; text-align: center; border-radius: 10px 10px 0 0; }
                    .content { background: #f8f9fa; padding: 30px; }
                    .points-box { background: white; border-left: 4px solid #667eea; padding: 20px; margin: 20px 0; border-radius: 5px; }
                    .points-number { font-size: 48px; font-weight: bold; color: #667eea; text-align: center; }
                    .button { display: inline-block; padding: 12px 30px; background: #667eea; color: white; text-decoration: none; border-radius: 5px; margin: 20px 0; }
                    .footer { text-align: center; padding: 20px; color: #666; font-size: 12px; }
                </style>
            </head>
            <body>
                <div class="container">
                    <div class="header">
                        <h1>%s ƒêi·ªÉm Th∆∞·ªüng M·ªõi!</h1>
                    </div>
                    <div class="content">
                        <p>Xin ch√†o <strong>%s</strong>,</p>
                        <p>Ch√∫c m·ª´ng! B·∫°n v·ª´a nh·∫≠n ƒë∆∞·ª£c ƒëi·ªÉm th∆∞·ªüng t·ª´ %s:</p>
                        
                        <div class="points-box">
                            <div class="points-number">+%d ƒëi·ªÉm</div>
                            <p style="text-align: center; margin-top: 10px; color: #666;">%s</p>
                        </div>
                        
                        <p>üí° <strong>M·∫πo:</strong> T√≠ch l≈©y ƒëi·ªÉm ƒë·ªÉ ƒë·ªïi voucher gi·∫£m gi√° v√† n√¢ng c·∫•p h·∫°ng th√†nh vi√™n!</p>
                        
                        <div style="text-align: center;">
                            <a href="%s/loyalty" class="button">Xem ƒêi·ªÉm Th∆∞·ªüng</a>
                        </div>
                    </div>
                    <div class="footer">
                        <p>¬© 2024 %s. All rights reserved.</p>
                        <p>Email n√†y ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông, vui l√≤ng kh√¥ng tr·∫£ l·ªùi.</p>
                    </div>
                </div>
            </body>
            </html>
            """,
            emoji,
            user.getName(),
            getSourceName(source),
            points,
            description,
            appUrl,
            appName
        );
    }
    
    private String buildLevelUpHtml(User user, String oldLevel, String newLevel, int pointsBalance) {
        String newLevelEmoji = getLevelEmoji(newLevel);
        String benefits = getLevelBenefitsHtml(newLevel);
        
        return String.format("""
            <!DOCTYPE html>
            <html>
            <head>
                <meta charset="UTF-8">
                <style>
                    body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
                    .container { max-width: 600px; margin: 0 auto; padding: 20px; }
                    .header { background: linear-gradient(135deg, #f093fb 0%%, #f5576c 100%%); color: white; padding: 40px; text-align: center; border-radius: 10px 10px 0 0; }
                    .level-badge { font-size: 80px; margin: 20px 0; }
                    .content { background: #f8f9fa; padding: 30px; }
                    .benefits { background: white; padding: 20px; margin: 20px 0; border-radius: 5px; }
                    .benefit-item { padding: 10px; margin: 10px 0; background: #f0f7ff; border-left: 3px solid #4299e1; }
                    .button { display: inline-block; padding: 12px 30px; background: #f5576c; color: white; text-decoration: none; border-radius: 5px; margin: 20px 0; }
                    .footer { text-align: center; padding: 20px; color: #666; font-size: 12px; }
                </style>
            </head>
            <body>
                <div class="container">
                    <div class="header">
                        <h1>üéä Ch√∫c M·ª´ng L√™n H·∫°ng! üéä</h1>
                        <div class="level-badge">%s</div>
                        <h2>%s</h2>
                    </div>
                    <div class="content">
                        <p>Xin ch√†o <strong>%s</strong>,</p>
                        <p>Th·∫≠t tuy·ªát v·ªùi! B·∫°n ƒë√£ ƒë∆∞·ª£c n√¢ng c·∫•p t·ª´ h·∫°ng <strong>%s</strong> l√™n <strong>%s</strong>!</p>
                        
                        <p>üìä T·ªïng ƒëi·ªÉm hi·ªán t·∫°i: <strong>%d ƒëi·ªÉm</strong></p>
                        
                        <div class="benefits">
                            <h3>üéÅ Quy·ªÅn l·ª£i c·ªßa h·∫°ng %s:</h3>
                            %s
                        </div>
                        
                        <p>Ti·∫øp t·ª•c t√≠ch ƒëi·ªÉm ƒë·ªÉ m·ªü kh√≥a nhi·ªÅu ∆∞u ƒë√£i h∆°n n·ªØa!</p>
                        
                        <div style="text-align: center;">
                            <a href="%s/loyalty" class="button">Kh√°m Ph√° Quy·ªÅn L·ª£i</a>
                        </div>
                    </div>
                    <div class="footer">
                        <p>¬© 2024 %s. All rights reserved.</p>
                    </div>
                </div>
            </body>
            </html>
            """,
            newLevelEmoji,
            newLevel,
            user.getName(),
            oldLevel,
            newLevel,
            pointsBalance,
            newLevel,
            benefits,
            appUrl,
            appName
        );
    }
    
    private String buildVoucherRedeemedHtml(User user, String voucherCode, int pointsCost, double voucherValue) {
        return String.format("""
            <!DOCTYPE html>
            <html>
            <head>
                <meta charset="UTF-8">
                <style>
                    body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
                    .container { max-width: 600px; margin: 0 auto; padding: 20px; }
                    .header { background: linear-gradient(135deg, #a8edea 0%%, #fed6e3 100%%); color: #333; padding: 30px; text-align: center; border-radius: 10px 10px 0 0; }
                    .content { background: #f8f9fa; padding: 30px; }
                    .voucher-box { background: white; border: 2px dashed #48bb78; padding: 25px; margin: 20px 0; border-radius: 10px; text-align: center; }
                    .voucher-code { font-size: 32px; font-weight: bold; color: #48bb78; letter-spacing: 2px; margin: 15px 0; padding: 15px; background: #f0fff4; border-radius: 5px; }
                    .voucher-value { font-size: 36px; font-weight: bold; color: #e53e3e; }
                    .info-box { background: #fff3cd; border-left: 4px solid #ffc107; padding: 15px; margin: 20px 0; border-radius: 5px; }
                    .button { display: inline-block; padding: 12px 30px; background: #48bb78; color: white; text-decoration: none; border-radius: 5px; margin: 20px 0; }
                    .footer { text-align: center; padding: 20px; color: #666; font-size: 12px; }
                </style>
            </head>
            <body>
                <div class="container">
                    <div class="header">
                        <h1>üéÅ Voucher C·ªßa B·∫°n</h1>
                    </div>
                    <div class="content">
                        <p>Xin ch√†o <strong>%s</strong>,</p>
                        <p>B·∫°n ƒë√£ ƒë·ªïi th√†nh c√¥ng <strong>%d ƒëi·ªÉm</strong> l·∫•y voucher gi·∫£m gi√°!</p>
                        
                        <div class="voucher-box">
                            <p>üí∞ Gi√° tr·ªã voucher</p>
                            <div class="voucher-value">%s</div>
                            <p style="margin-top: 20px;">üîë M√£ voucher</p>
                            <div class="voucher-code">%s</div>
                        </div>
                        
                        <div class="info-box">
                            <p><strong>üìù H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng:</strong></p>
                            <ul style="margin: 10px 0; padding-left: 20px;">
                                <li>Sao ch√©p m√£ voucher b√™n tr√™n</li>
                                <li>Nh·∫≠p m√£ khi thanh to√°n booking</li>
                                <li>Gi·∫£m gi√° s·∫Ω ƒë∆∞·ª£c √°p d·ª•ng t·ª± ƒë·ªông</li>
                            </ul>
                            <p><strong>‚ö†Ô∏è L∆∞u √Ω:</strong> Voucher c√≥ th·ªÉ c√≥ h·∫°n s·ª≠ d·ª•ng, vui l√≤ng ki·ªÉm tra trong t√†i kho·∫£n.</p>
                        </div>
                        
                        <div style="text-align: center;">
                            <a href="%s/tours" class="button">ƒê·∫∑t Tour Ngay</a>
                        </div>
                    </div>
                    <div class="footer">
                        <p>¬© 2024 %s. All rights reserved.</p>
                    </div>
                </div>
            </body>
            </html>
            """,
            user.getName(),
            pointsCost,
            CURRENCY_FORMATTER.format(voucherValue),
            voucherCode,
            appUrl,
            appName
        );
    }
    
    // Helper methods
    private String getSourceEmoji(String source) {
        return switch (source.toUpperCase()) {
            case "BOOKING" -> "‚úàÔ∏è";
            case "REVIEW" -> "‚≠ê";
            case "REFERRAL" -> "üë•";
            case "BIRTHDAY" -> "üéÇ";
            case "PROMOTION" -> "üéâ";
            default -> "üéÅ";
        };
    }
    
    private String getSourceName(String source) {
        return switch (source.toUpperCase()) {
            case "BOOKING" -> "ƒë·∫∑t tour";
            case "REVIEW" -> "ƒë√°nh gi√° tour";
            case "REFERRAL" -> "gi·ªõi thi·ªáu b·∫°n b√®";
            case "BIRTHDAY" -> "sinh nh·∫≠t";
            case "PROMOTION" -> "ch∆∞∆°ng tr√¨nh khuy·∫øn m√£i";
            default -> "h·ªá th·ªëng";
        };
    }
    
    private String getLevelEmoji(String level) {
        return switch (level.toUpperCase()) {
            case "DIAMOND" -> "üíé";
            case "PLATINUM" -> "üèÜ";
            case "GOLD" -> "ü•á";
            case "SILVER" -> "ü•à";
            case "BRONZE" -> "ü•â";
            default -> "‚≠ê";
        };
    }
    
    private String getLevelBenefitsHtml(String level) {
        return switch (level.toUpperCase()) {
            case "SILVER" -> """
                <div class="benefit-item">üí∞ Gi·∫£m 5%% m·ªçi booking</div>
                <div class="benefit-item">‚ö° ∆Øu ti√™n x·ª≠ l√Ω booking</div>
                """;
            case "GOLD" -> """
                <div class="benefit-item">üí∞ Gi·∫£m 10%% m·ªçi booking</div>
                <div class="benefit-item">‚ö° ∆Øu ti√™n x·ª≠ l√Ω booking</div>
                <div class="benefit-item">‚¨ÜÔ∏è N√¢ng c·∫•p mi·ªÖn ph√≠ ph√≤ng & d·ªãch v·ª•</div>
                """;
            case "PLATINUM" -> """
                <div class="benefit-item">üí∞ Gi·∫£m 15%% m·ªçi booking</div>
                <div class="benefit-item">‚ö° ∆Øu ti√™n x·ª≠ l√Ω booking</div>
                <div class="benefit-item">‚¨ÜÔ∏è N√¢ng c·∫•p mi·ªÖn ph√≠ ph√≤ng & d·ªãch v·ª•</div>
                <div class="benefit-item">üë§ Qu·∫£n l√Ω c√° nh√¢n h·ªó tr·ª£ 24/7</div>
                """;
            case "DIAMOND" -> """
                <div class="benefit-item">üí∞ Gi·∫£m 20%% m·ªçi booking</div>
                <div class="benefit-item">‚ö° ∆Øu ti√™n x·ª≠ l√Ω booking</div>
                <div class="benefit-item">‚¨ÜÔ∏è N√¢ng c·∫•p mi·ªÖn ph√≠ ph√≤ng & d·ªãch v·ª•</div>
                <div class="benefit-item">üë§ Qu·∫£n l√Ω c√° nh√¢n h·ªó tr·ª£ 24/7</div>
                <div class="benefit-item">üéâ Tr·∫£i nghi·ªám s·ª± ki·ªán VIP ƒë·ªôc quy·ªÅn</div>
                """;
            default -> """
                <div class="benefit-item">üí∞ Gi·∫£m 2%% m·ªçi booking</div>
                """;
        };
    }
}

