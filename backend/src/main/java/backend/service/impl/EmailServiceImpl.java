package backend.service.impl;

import backend.entity.Newsletter;
import backend.repository.NewsletterRepository;
import backend.service.EmailService;
import jakarta.mail.MessagingException;
import jakarta.mail.internet.MimeMessage;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.mail.javamail.JavaMailSender;
import org.springframework.mail.javamail.MimeMessageHelper;
import org.springframework.scheduling.annotation.Async;
import org.springframework.stereotype.Service;

import java.util.List;

@Service
@RequiredArgsConstructor
@Slf4j
public class EmailServiceImpl implements EmailService {
    
    private final JavaMailSender mailSender;
    private final NewsletterRepository newsletterRepository;
    
    @Value("${app.email.from}")
    private String fromEmail;
    
    @Value("${app.email.from-name}")
    private String fromName;
    
    @Value("${spring.mail.username:#{null}}")
    private String mailUsername;
    
    private static final String FRONTEND_URL = "http://localhost:5173";
    
    @Override
    @Async
    public void sendNewsletterWelcomeEmail(String to, String subscriberEmail) {
        try {
            MimeMessage message = mailSender.createMimeMessage();
            MimeMessageHelper helper = new MimeMessageHelper(message, true, "UTF-8");
            
            helper.setFrom(mailUsername != null ? mailUsername : fromEmail, fromName);
            helper.setTo(to);
            helper.setSubject("üéâ Ch√†o m·ª´ng ƒë·∫øn v·ªõi TourBooking - ƒêƒÉng k√Ω nh·∫≠n tin th√†nh c√¥ng!");
            
            String htmlContent = buildWelcomeEmailTemplate(subscriberEmail);
            helper.setText(htmlContent, true);
            
            mailSender.send(message);
            log.info("‚úÖ Welcome email sent to: {}", to);
            
        } catch (Exception e) {
            log.error("‚ùå Error sending welcome email to {}: {}", to, e.getMessage(), e);
        }
    }
    
    @Override
    @Async
    public void sendNewTourNotification(Long tourId, String tourName, String tourSlug) {
        try {
            List<Newsletter> activeSubscribers = newsletterRepository.findAll().stream()
                    .filter(Newsletter::getIsActive)
                    .toList();
            
            if (activeSubscribers.isEmpty()) {
                log.info("üìß No active subscribers to send new tour notification");
                return;
            }
            
            String tourUrl = FRONTEND_URL + "/tours/" + tourSlug;
            
            for (Newsletter subscriber : activeSubscribers) {
                try {
                    MimeMessage message = mailSender.createMimeMessage();
                    MimeMessageHelper helper = new MimeMessageHelper(message, true, "UTF-8");
                    
                    helper.setFrom(mailUsername != null ? mailUsername : fromEmail, fromName);
                    helper.setTo(subscriber.getEmail());
                    helper.setSubject("üåè Tour m·ªõi: " + tourName);
                    
                    String htmlContent = buildNewTourEmailTemplate(tourName, tourUrl, subscriber.getEmail());
                    helper.setText(htmlContent, true);
                    
                    mailSender.send(message);
                    log.debug("‚úÖ New tour email sent to: {}", subscriber.getEmail());
                    
                } catch (Exception e) {
                    log.error("‚ùå Error sending new tour email to {}: {}", subscriber.getEmail(), e.getMessage());
                }
            }
            
            log.info("‚úÖ Sent new tour notification to {} subscribers", activeSubscribers.size());
            
        } catch (Exception e) {
            log.error("‚ùå Error sending new tour notifications: {}", e.getMessage(), e);
        }
    }
    
    @Override
    @Async
    public void sendPromotionNotification(String promotionCode, String promotionName, Integer discountPercent) {
        try {
            List<Newsletter> activeSubscribers = newsletterRepository.findAll().stream()
                    .filter(Newsletter::getIsActive)
                    .toList();
            
            if (activeSubscribers.isEmpty()) {
                log.info("üìß No active subscribers to send promotion notification");
                return;
            }
            
            for (Newsletter subscriber : activeSubscribers) {
                try {
                    MimeMessage message = mailSender.createMimeMessage();
                    MimeMessageHelper helper = new MimeMessageHelper(message, true, "UTF-8");
                    
                    helper.setFrom(mailUsername != null ? mailUsername : fromEmail, fromName);
                    helper.setTo(subscriber.getEmail());
                    helper.setSubject("üéÅ M√£ gi·∫£m gi√° " + discountPercent + "% - " + promotionName);
                    
                    String htmlContent = buildPromotionEmailTemplate(promotionCode, promotionName, discountPercent, subscriber.getEmail());
                    helper.setText(htmlContent, true);
                    
                    mailSender.send(message);
                    log.debug("‚úÖ Promotion email sent to: {}", subscriber.getEmail());
                    
                } catch (Exception e) {
                    log.error("‚ùå Error sending promotion email to {}: {}", subscriber.getEmail(), e.getMessage());
                }
            }
            
            log.info("‚úÖ Sent promotion notification to {} subscribers", activeSubscribers.size());
            
        } catch (Exception e) {
            log.error("‚ùå Error sending promotion notifications: {}", e.getMessage(), e);
        }
    }
    
    @Override
    @Async
    public void sendBookingConfirmation(String to, String bookingCode, String tourName) {
        try {
            MimeMessage message = mailSender.createMimeMessage();
            MimeMessageHelper helper = new MimeMessageHelper(message, true, "UTF-8");
            
            helper.setFrom(mailUsername != null ? mailUsername : fromEmail, fromName);
            helper.setTo(to);
            helper.setSubject("‚úÖ X√°c nh·∫≠n ƒë·∫∑t tour - " + bookingCode);
            
            String htmlContent = buildBookingConfirmationTemplate(bookingCode, tourName);
            helper.setText(htmlContent, true);
            
            mailSender.send(message);
            log.info("‚úÖ Booking confirmation email sent to: {}", to);
            
        } catch (Exception e) {
            log.error("‚ùå Error sending booking confirmation to {}: {}", to, e.getMessage(), e);
        }
    }
    
    @Override
    @Async
    public void sendPasswordResetEmail(backend.entity.User user, String resetToken) {
        try {
            MimeMessage message = mailSender.createMimeMessage();
            MimeMessageHelper helper = new MimeMessageHelper(message, true, "UTF-8");
            
            helper.setFrom(mailUsername != null ? mailUsername : fromEmail, fromName);
            helper.setTo(user.getEmail());
            helper.setSubject("üîí ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u - TourBooking");
            
            String resetUrl = FRONTEND_URL + "/reset-password?token=" + resetToken;
            String htmlContent = buildPasswordResetTemplate(user.getName(), resetUrl);
            helper.setText(htmlContent, true);
            
            mailSender.send(message);
            log.info("‚úÖ Password reset email sent to: {}", user.getEmail());
            
        } catch (Exception e) {
            log.error("‚ùå Error sending password reset email: {}", e.getMessage(), e);
        }
    }
    
    @Override
    @Async
    public void sendVerificationEmail(backend.entity.User user, String verificationToken) {
        try {
            MimeMessage message = mailSender.createMimeMessage();
            MimeMessageHelper helper = new MimeMessageHelper(message, true, "UTF-8");
            
            helper.setFrom(mailUsername != null ? mailUsername : fromEmail, fromName);
            helper.setTo(user.getEmail());
            helper.setSubject("‚úâÔ∏è X√°c th·ª±c email - TourBooking");
            
            String verifyUrl = FRONTEND_URL + "/verify-email?token=" + verificationToken;
            String htmlContent = buildVerificationEmailTemplate(user.getName(), verifyUrl);
            helper.setText(htmlContent, true);
            
            mailSender.send(message);
            log.info("‚úÖ Verification email sent to: {}", user.getEmail());
            
        } catch (Exception e) {
            log.error("‚ùå Error sending verification email: {}", e.getMessage(), e);
        }
    }
    
    @Override
    @Async
    public void sendSimpleEmail(String to, String subject, String content) {
        try {
            MimeMessage message = mailSender.createMimeMessage();
            MimeMessageHelper helper = new MimeMessageHelper(message, true, "UTF-8");
            
            helper.setFrom(mailUsername != null ? mailUsername : fromEmail, fromName);
            helper.setTo(to);
            helper.setSubject(subject);
            helper.setText(content, true);
            
            mailSender.send(message);
            log.info("‚úÖ Simple email sent to: {}", to);
            
        } catch (Exception e) {
            log.error("‚ùå Error sending simple email: {}", e.getMessage(), e);
        }
    }
    
    // ==================== EMAIL TEMPLATES ====================
    
    private String buildWelcomeEmailTemplate(String email) {
        return """
            <!DOCTYPE html>
            <html>
            <head>
                <meta charset="UTF-8">
                <style>
                    body { font-family: 'Segoe UI', Arial, sans-serif; line-height: 1.6; color: #333; }
                    .container { max-width: 600px; margin: 0 auto; padding: 20px; }
                    .header { background: linear-gradient(135deg, #D4AF37 0%%, #C5A028 100%%); color: white; padding: 30px; text-align: center; }
                    .content { background: #f9f9f9; padding: 30px; }
                    .button { display: inline-block; padding: 12px 30px; background: linear-gradient(135deg, #D4AF37 0%%, #C5A028 100%%); color: white; text-decoration: none; border-radius: 5px; margin: 20px 0; }
                    .footer { text-align: center; padding: 20px; color: #666; font-size: 12px; }
                </style>
            </head>
            <body>
                <div class="container">
                    <div class="header">
                        <h1>üéâ Ch√†o m·ª´ng ƒë·∫øn v·ªõi TourBooking!</h1>
                    </div>
                    <div class="content">
                        <h2>Xin ch√†o!</h2>
                        <p>C·∫£m ∆°n b·∫°n ƒë√£ ƒëƒÉng k√Ω nh·∫≠n tin t·ª©c t·ª´ <strong>TourBooking.com</strong>!</p>
                        <p>T·ª´ gi·ªù b·∫°n s·∫Ω nh·∫≠n ƒë∆∞·ª£c:</p>
                        <ul>
                            <li>üåç Th√¥ng b√°o v·ªÅ c√°c tour m·ªõi h·∫•p d·∫´n</li>
                            <li>üéÅ M√£ gi·∫£m gi√° ƒë·ªôc quy·ªÅn</li>
                            <li>‚ú® ∆Øu ƒë√£i ƒë·∫∑c bi·ªát d√†nh ri√™ng cho th√†nh vi√™n</li>
                            <li>üì∞ Tin t·ª©c du l·ªãch m·ªõi nh·∫•t</li>
                        </ul>
                        <p style="text-align: center;">
                            <a href="%s/tours" class="button">Kh√°m ph√° tour ngay</a>
                        </p>
                        <p>N·∫øu b·∫°n mu·ªën h·ªßy ƒëƒÉng k√Ω, vui l√≤ng <a href="%s/newsletter/unsubscribe?email=%s">click v√†o ƒë√¢y</a>.</p>
                    </div>
                    <div class="footer">
                        <p>&copy; 2025 TourBooking.com. T·∫•t c·∫£ quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.</p>
                        <p>123 ƒê∆∞·ªùng ABC, Qu·∫≠n 1, TP.HCM | +84 (0) 123 456 789</p>
                    </div>
                </div>
            </body>
            </html>
            """.formatted(FRONTEND_URL, FRONTEND_URL, email);
    }
    
    private String buildNewTourEmailTemplate(String tourName, String tourUrl, String email) {
        return """
            <!DOCTYPE html>
            <html>
            <head>
                <meta charset="UTF-8">
                <style>
                    body { font-family: 'Segoe UI', Arial, sans-serif; line-height: 1.6; color: #333; }
                    .container { max-width: 600px; margin: 0 auto; padding: 20px; }
                    .header { background: linear-gradient(135deg, #1e293b 0%%, #0f172a 100%%); color: white; padding: 30px; text-align: center; }
                    .content { background: #f9f9f9; padding: 30px; }
                    .button { display: inline-block; padding: 12px 30px; background: linear-gradient(135deg, #D4AF37 0%%, #C5A028 100%%); color: white; text-decoration: none; border-radius: 5px; margin: 20px 0; }
                    .footer { text-align: center; padding: 20px; color: #666; font-size: 12px; }
                </style>
            </head>
            <body>
                <div class="container">
                    <div class="header">
                        <h1>üåè Tour M·ªõi V·ª´a Ra M·∫Øt!</h1>
                    </div>
                    <div class="content">
                        <h2>%s</h2>
                        <p>Ch√∫ng t√¥i vui m·ª´ng th√¥ng b√°o v·ªÅ tour du l·ªãch m·ªõi tuy·ªát v·ªùi!</p>
                        <p>ƒê·ª´ng b·ªè l·ª° c∆° h·ªôi kh√°m ph√° nh·ªØng tr·∫£i nghi·ªám ƒë·ªôc ƒë√°o c√πng ch√∫ng t√¥i.</p>
                        <p style="text-align: center;">
                            <a href="%s" class="button">Xem chi ti·∫øt tour</a>
                        </p>
                        <p><small>S·ªë l∆∞·ª£ng ch·ªó c√≥ h·∫°n, ƒë·∫∑t ngay ƒë·ªÉ ƒë∆∞·ª£c gi√° t·ªët nh·∫•t!</small></p>
                    </div>
                    <div class="footer">
                        <p>&copy; 2025 TourBooking.com</p>
                        <p><a href="%s/newsletter/unsubscribe?email=%s">H·ªßy ƒëƒÉng k√Ω</a></p>
                    </div>
                </div>
            </body>
            </html>
            """.formatted(tourName, tourUrl, FRONTEND_URL, email);
    }
    
    private String buildPromotionEmailTemplate(String code, String name, Integer percent, String email) {
        return """
            <!DOCTYPE html>
            <html>
            <head>
                <meta charset="UTF-8">
                <style>
                    body { font-family: 'Segoe UI', Arial, sans-serif; line-height: 1.6; color: #333; }
                    .container { max-width: 600px; margin: 0 auto; padding: 20px; }
                    .header { background: linear-gradient(135deg, #D4AF37 0%%, #C5A028 100%%); color: white; padding: 30px; text-align: center; }
                    .content { background: #f9f9f9; padding: 30px; }
                    .promo-code { background: #fff; border: 2px dashed #D4AF37; padding: 20px; text-align: center; font-size: 24px; font-weight: bold; color: #D4AF37; margin: 20px 0; }
                    .button { display: inline-block; padding: 12px 30px; background: linear-gradient(135deg, #D4AF37 0%%, #C5A028 100%%); color: white; text-decoration: none; border-radius: 5px; margin: 20px 0; }
                    .footer { text-align: center; padding: 20px; color: #666; font-size: 12px; }
                </style>
            </head>
            <body>
                <div class="container">
                    <div class="header">
                        <h1>üéÅ M√£ Gi·∫£m Gi√° %d%%%% D√†nh Cho B·∫°n!</h1>
                    </div>
                    <div class="content">
                        <h2>%s</h2>
                        <p>Ch√∫ng t√¥i c√≥ m√≥n qu√† ƒë·∫∑c bi·ªát d√†nh cho b·∫°n!</p>
                        <div class="promo-code">
                            %s
                        </div>
                        <p>S·ª≠ d·ª•ng m√£ n√†y ƒë·ªÉ nh·∫≠n <strong>gi·∫£m gi√° %d%%%%</strong> cho booking ti·∫øp theo c·ªßa b·∫°n!</p>
                        <p style="text-align: center;">
                            <a href="%s/tours" class="button">ƒê·∫∑t tour ngay</a>
                        </p>
                        <p><small><em>* √Åp d·ª•ng cho t·∫•t c·∫£ c√°c tour. C√≥ th·ªÉ c√≥ ƒëi·ªÅu ki·ªán k√®m theo.</em></small></p>
                    </div>
                    <div class="footer">
                        <p>&copy; 2025 TourBooking.com</p>
                        <p><a href="%s/newsletter/unsubscribe?email=%s">H·ªßy ƒëƒÉng k√Ω</a></p>
                    </div>
                </div>
            </body>
            </html>
            """.formatted(percent, name, code, percent, FRONTEND_URL, FRONTEND_URL, email);
    }
    
    private String buildBookingConfirmationTemplate(String bookingCode, String tourName) {
        return """
            <!DOCTYPE html>
            <html>
            <head>
                <meta charset="UTF-8">
                <style>
                    body { font-family: 'Segoe UI', Arial, sans-serif; line-height: 1.6; color: #333; }
                    .container { max-width: 600px; margin: 0 auto; padding: 20px; }
                    .header { background: linear-gradient(135deg, #22c55e 0%%, #16a34a 100%%); color: white; padding: 30px; text-align: center; }
                    .content { background: #f9f9f9; padding: 30px; }
                    .booking-code { background: #fff; border: 2px solid #22c55e; padding: 15px; text-align: center; font-size: 20px; font-weight: bold; color: #16a34a; margin: 20px 0; }
                    .button { display: inline-block; padding: 12px 30px; background: linear-gradient(135deg, #D4AF37 0%%, #C5A028 100%%); color: white; text-decoration: none; border-radius: 5px; margin: 20px 0; }
                    .footer { text-align: center; padding: 20px; color: #666; font-size: 12px; }
                </style>
            </head>
            <body>
                <div class="container">
                    <div class="header">
                        <h1>‚úÖ ƒê·∫∑t Tour Th√†nh C√¥ng!</h1>
                    </div>
                    <div class="content">
                        <h2>C·∫£m ∆°n b·∫°n ƒë√£ tin t∆∞·ªüng TourBooking!</h2>
                        <p>Booking c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c x√°c nh·∫≠n th√†nh c√¥ng.</p>
                        <div class="booking-code">
                            M√£ booking: %s
                        </div>
                        <p><strong>Tour:</strong> %s</p>
                        <p>Ch√∫ng t√¥i s·∫Ω li√™n h·ªá v·ªõi b·∫°n s·ªõm nh·∫•t ƒë·ªÉ x√°c nh·∫≠n chi ti·∫øt.</p>
                        <p style="text-align: center;">
                            <a href="%s/bookings" class="button">Xem chi ti·∫øt booking</a>
                        </p>
                    </div>
                    <div class="footer">
                        <p>&copy; 2025 TourBooking.com</p>
                        <p>Hotline: +84 (0) 123 456 789</p>
                    </div>
                </div>
            </body>
            </html>
            """.formatted(bookingCode, tourName, FRONTEND_URL);
    }
    
    private String buildPasswordResetTemplate(String userName, String resetUrl) {
        return """
            <!DOCTYPE html>
            <html>
            <head>
                <meta charset="UTF-8">
                <style>
                    body { font-family: 'Segoe UI', Arial, sans-serif; line-height: 1.6; color: #333; }
                    .container { max-width: 600px; margin: 0 auto; padding: 20px; }
                    .header { background: linear-gradient(135deg, #ef4444 0%%, #dc2626 100%%); color: white; padding: 30px; text-align: center; }
                    .content { background: #f9f9f9; padding: 30px; }
                    .button { display: inline-block; padding: 12px 30px; background: linear-gradient(135deg, #D4AF37 0%%, #C5A028 100%%); color: white; text-decoration: none; border-radius: 5px; margin: 20px 0; }
                    .footer { text-align: center; padding: 20px; color: #666; font-size: 12px; }
                </style>
            </head>
            <body>
                <div class="container">
                    <div class="header">
                        <h1>üîí ƒê·∫∑t L·∫°i M·∫≠t Kh·∫©u</h1>
                    </div>
                    <div class="content">
                        <h2>Xin ch√†o %s,</h2>
                        <p>Ch√∫ng t√¥i nh·∫≠n ƒë∆∞·ª£c y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u cho t√†i kho·∫£n c·ªßa b·∫°n.</p>
                        <p>Click v√†o n√∫t b√™n d∆∞·ªõi ƒë·ªÉ ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u:</p>
                        <p style="text-align: center;">
                            <a href="%s" class="button">ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u</a>
                        </p>
                        <p><small>Link n√†y s·∫Ω h·∫øt h·∫°n sau 24 gi·ªù.</small></p>
                        <p><small><em>N·∫øu b·∫°n kh√¥ng y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u, vui l√≤ng b·ªè qua email n√†y.</em></small></p>
                    </div>
                    <div class="footer">
                        <p>&copy; 2025 TourBooking.com</p>
                    </div>
                </div>
            </body>
            </html>
            """.formatted(userName, resetUrl);
    }
    
    private String buildVerificationEmailTemplate(String userName, String verifyUrl) {
        return """
            <!DOCTYPE html>
            <html>
            <head>
                <meta charset="UTF-8">
                <style>
                    body { font-family: 'Segoe UI', Arial, sans-serif; line-height: 1.6; color: #333; }
                    .container { max-width: 600px; margin: 0 auto; padding: 20px; }
                    .header { background: linear-gradient(135deg, #3b82f6 0%%, #2563eb 100%%); color: white; padding: 30px; text-align: center; }
                    .content { background: #f9f9f9; padding: 30px; }
                    .button { display: inline-block; padding: 12px 30px; background: linear-gradient(135deg, #D4AF37 0%%, #C5A028 100%%); color: white; text-decoration: none; border-radius: 5px; margin: 20px 0; }
                    .footer { text-align: center; padding: 20px; color: #666; font-size: 12px; }
                </style>
            </head>
            <body>
                <div class="container">
                    <div class="header">
                        <h1>‚úâÔ∏è X√°c Th·ª±c Email</h1>
                    </div>
                    <div class="content">
                        <h2>Xin ch√†o %s,</h2>
                        <p>C·∫£m ∆°n b·∫°n ƒë√£ ƒëƒÉng k√Ω t√†i kho·∫£n TourBooking!</p>
                        <p>Vui l√≤ng click v√†o n√∫t b√™n d∆∞·ªõi ƒë·ªÉ x√°c th·ª±c email c·ªßa b·∫°n:</p>
                        <p style="text-align: center;">
                            <a href="%s" class="button">X√°c th·ª±c email</a>
                        </p>
                        <p><small>Link n√†y s·∫Ω h·∫øt h·∫°n sau 24 gi·ªù.</small></p>
                    </div>
                    <div class="footer">
                        <p>&copy; 2025 TourBooking.com</p>
                    </div>
                </div>
            </body>
            </html>
            """.formatted(userName, verifyUrl);
    }
    
    @Override
    @Async
    public void sendPointsEarnedEmail(backend.entity.User user, Integer points, String tourName, String transactionType) {
        try {
            MimeMessage message = mailSender.createMimeMessage();
            MimeMessageHelper helper = new MimeMessageHelper(message, true, "UTF-8");
            
            helper.setFrom(mailUsername != null ? mailUsername : fromEmail, fromName);
            helper.setTo(user.getEmail());
            helper.setSubject("üéÅ B·∫°n v·ª´a nh·∫≠n ƒë∆∞·ª£c " + points + " ƒëi·ªÉm th∆∞·ªüng!");
            
            String htmlContent = buildPointsEarnedTemplate(user.getName(), points, tourName, transactionType);
            helper.setText(htmlContent, true);
            
            mailSender.send(message);
            log.info("‚úÖ Points earned email sent to: {}", user.getEmail());
            
        } catch (Exception e) {
            log.error("‚ùå Error sending points earned email: {}", e.getMessage(), e);
        }
    }
    
    @Override
    @Async
    public void sendLevelUpEmail(backend.entity.User user, String oldLevel, String newLevel, Integer totalPoints) {
        try {
            MimeMessage message = mailSender.createMimeMessage();
            MimeMessageHelper helper = new MimeMessageHelper(message, true, "UTF-8");
            
            helper.setFrom(mailUsername != null ? mailUsername : fromEmail, fromName);
            helper.setTo(user.getEmail());
            helper.setSubject("üéâ Ch√∫c m·ª´ng! B·∫°n ƒë√£ l√™n h·∫°ng " + newLevel);
            
            String htmlContent = buildLevelUpTemplate(user.getName(), oldLevel, newLevel, totalPoints);
            helper.setText(htmlContent, true);
            
            mailSender.send(message);
            log.info("‚úÖ Level up email sent to: {}", user.getEmail());
            
        } catch (Exception e) {
            log.error("‚ùå Error sending level up email: {}", e.getMessage(), e);
        }
    }
    
    @Override
    @Async
    public void sendVoucherRedeemedEmail(backend.entity.User user, String voucherCode, Integer pointsUsed, double discountAmount) {
        try {
            MimeMessage message = mailSender.createMimeMessage();
            MimeMessageHelper helper = new MimeMessageHelper(message, true, "UTF-8");
            
            helper.setFrom(mailUsername != null ? mailUsername : fromEmail, fromName);
            helper.setTo(user.getEmail());
            helper.setSubject("üéüÔ∏è ƒê·ªïi ƒëi·ªÉm th√†nh c√¥ng - M√£: " + voucherCode);
            
            String htmlContent = buildVoucherRedeemedTemplate(user.getName(), voucherCode, pointsUsed, discountAmount);
            helper.setText(htmlContent, true);
            
            mailSender.send(message);
            log.info("‚úÖ Voucher redeemed email sent to: {}", user.getEmail());
            
        } catch (Exception e) {
            log.error("‚ùå Error sending voucher redeemed email: {}", e.getMessage(), e);
        }
    }
    
    // Templates for new email types
    private String buildPointsEarnedTemplate(String userName, Integer points, String tourName, String transactionType) {
        String emoji = transactionType.equals("BOOKING") ? "üé´" : "üéÅ";
        return """
            <!DOCTYPE html>
            <html>
            <head>
                <meta charset="UTF-8">
                <style>
                    body { font-family: 'Segoe UI', Arial, sans-serif; line-height: 1.6; color: #333; }
                    .container { max-width: 600px; margin: 0 auto; padding: 20px; }
                    .header { background: linear-gradient(135deg, #D4AF37 0%%, #C5A028 100%%); color: white; padding: 30px; text-align: center; }
                    .content { background: #f9f9f9; padding: 30px; }
                    .points-box { background: white; border: 2px solid #D4AF37; padding: 20px; margin: 20px 0; text-align: center; border-radius: 10px; }
                    .points { font-size: 48px; font-weight: bold; color: #D4AF37; }
                    .button { display: inline-block; padding: 12px 30px; background: linear-gradient(135deg, #D4AF37 0%%, #C5A028 100%%); color: white; text-decoration: none; border-radius: 5px; margin: 20px 0; }
                    .footer { text-align: center; padding: 20px; color: #666; font-size: 12px; }
                </style>
            </head>
            <body>
                <div class="container">
                    <div class="header">
                        <h1>%s ƒêi·ªÉm Th∆∞·ªüng M·ªõi!</h1>
                    </div>
                    <div class="content">
                        <h2>Xin ch√†o %s,</h2>
                        <p>B·∫°n v·ª´a nh·∫≠n ƒë∆∞·ª£c ƒëi·ªÉm th∆∞·ªüng t·ª´: <strong>%s</strong></p>
                        <div class="points-box">
                            <div class="points">+%d</div>
                            <p>ƒêi·ªÉm th∆∞·ªüng</p>
                        </div>
                        <p style="text-align: center;">
                            <a href="%s/loyalty" class="button">Xem ƒëi·ªÉm th∆∞·ªüng c·ªßa t√¥i</a>
                        </p>
                        <p><small>ƒêi·ªÉm th∆∞·ªüng c√≥ th·ªÉ ƒë∆∞·ª£c s·ª≠ d·ª•ng ƒë·ªÉ ƒë·ªïi voucher gi·∫£m gi√° cho c√°c booking ti·∫øp theo!</small></p>
                    </div>
                    <div class="footer">
                        <p>&copy; 2025 TourBooking.com</p>
                    </div>
                </div>
            </body>
            </html>
            """.formatted(emoji, userName, tourName, points, FRONTEND_URL);
    }
    
    private String buildLevelUpTemplate(String userName, String oldLevel, String newLevel, Integer totalPoints) {
        return """
            <!DOCTYPE html>
            <html>
            <head>
                <meta charset="UTF-8">
                <style>
                    body { font-family: 'Segoe UI', Arial, sans-serif; line-height: 1.6; color: #333; }
                    .container { max-width: 600px; margin: 0 auto; padding: 20px; }
                    .header { background: linear-gradient(135deg, #8b5cf6 0%%, #7c3aed 100%%); color: white; padding: 30px; text-align: center; }
                    .content { background: #f9f9f9; padding: 30px; }
                    .level-box { background: white; border: 3px solid #8b5cf6; padding: 30px; margin: 20px 0; text-align: center; border-radius: 10px; }
                    .new-level { font-size: 42px; font-weight: bold; color: #8b5cf6; margin: 10px 0; }
                    .button { display: inline-block; padding: 12px 30px; background: linear-gradient(135deg, #D4AF37 0%%, #C5A028 100%%); color: white; text-decoration: none; border-radius: 5px; margin: 20px 0; }
                    .footer { text-align: center; padding: 20px; color: #666; font-size: 12px; }
                </style>
            </head>
            <body>
                <div class="container">
                    <div class="header">
                        <h1>üéâ Ch√∫c M·ª´ng L√™n H·∫°ng!</h1>
                    </div>
                    <div class="content">
                        <h2>Xin ch√†o %s,</h2>
                        <p>Ch√∫c m·ª´ng! B·∫°n ƒë√£ l√™n h·∫°ng m·ªõi trong ch∆∞∆°ng tr√¨nh kh√°ch h√†ng th√¢n thi·∫øt!</p>
                        <div class="level-box">
                            <div style="font-size: 24px; color: #666;">%s ‚Üí </div>
                            <div class="new-level">%s</div>
                            <p style="font-size: 18px; color: #666; margin-top: 20px;">T·ªïng ƒëi·ªÉm: <strong>%d</strong></p>
                        </div>
                        <p>V·ªõi h·∫°ng m·ªõi, b·∫°n s·∫Ω nh·∫≠n ƒë∆∞·ª£c nhi·ªÅu ∆∞u ƒë√£i h·∫•p d·∫´n h∆°n!</p>
                        <p style="text-align: center;">
                            <a href="%s/loyalty" class="button">Kh√°m ph√° quy·ªÅn l·ª£i</a>
                        </p>
                    </div>
                    <div class="footer">
                        <p>&copy; 2025 TourBooking.com</p>
                    </div>
                </div>
            </body>
            </html>
            """.formatted(userName, oldLevel, newLevel, totalPoints, FRONTEND_URL);
    }
    
    private String buildVoucherRedeemedTemplate(String userName, String voucherCode, Integer pointsUsed, double discountAmount) {
        return """
            <!DOCTYPE html>
            <html>
            <head>
                <meta charset="UTF-8">
                <style>
                    body { font-family: 'Segoe UI', Arial, sans-serif; line-height: 1.6; color: #333; }
                    .container { max-width: 600px; margin: 0 auto; padding: 20px; }
                    .header { background: linear-gradient(135deg, #10b981 0%%, #059669 100%%); color: white; padding: 30px; text-align: center; }
                    .content { background: #f9f9f9; padding: 30px; }
                    .voucher-box { background: white; border: 2px dashed #10b981; padding: 30px; margin: 20px 0; text-align: center; border-radius: 10px; }
                    .voucher-code { font-size: 32px; font-weight: bold; color: #10b981; letter-spacing: 2px; background: #f0fdf4; padding: 15px; border-radius: 5px; margin: 15px 0; }
                    .button { display: inline-block; padding: 12px 30px; background: linear-gradient(135deg, #D4AF37 0%%, #C5A028 100%%); color: white; text-decoration: none; border-radius: 5px; margin: 20px 0; }
                    .footer { text-align: center; padding: 20px; color: #666; font-size: 12px; }
                </style>
            </head>
            <body>
                <div class="container">
                    <div class="header">
                        <h1>üéüÔ∏è ƒê·ªïi ƒêi·ªÉm Th√†nh C√¥ng!</h1>
                    </div>
                    <div class="content">
                        <h2>Xin ch√†o %s,</h2>
                        <p>B·∫°n ƒë√£ ƒë·ªïi <strong>%d ƒëi·ªÉm</strong> th√†nh voucher gi·∫£m gi√° th√†nh c√¥ng!</p>
                        <div class="voucher-box">
                            <p style="font-size: 18px; margin: 10px 0;">M√£ voucher c·ªßa b·∫°n:</p>
                            <div class="voucher-code">%s</div>
                            <p style="font-size: 16px; color: #10b981; font-weight: bold; margin: 15px 0;">Gi·∫£m: %,.0f VNƒê</p>
                        </div>
                        <p>S·ª≠ d·ª•ng m√£ n√†y khi booking tour ƒë·ªÉ ƒë∆∞·ª£c gi·∫£m gi√°!</p>
                        <p style="text-align: center;">
                            <a href="%s/tours" class="button">Kh√°m ph√° tour ngay</a>
                        </p>
                        <p><small><em>Voucher c√≥ hi·ªáu l·ª±c trong 30 ng√†y k·ªÉ t·ª´ ng√†y ƒë·ªïi.</em></small></p>
                    </div>
                    <div class="footer">
                        <p>&copy; 2025 TourBooking.com</p>
                    </div>
                </div>
            </body>
            </html>
            """.formatted(userName, pointsUsed, voucherCode, discountAmount, FRONTEND_URL);
    }
}
