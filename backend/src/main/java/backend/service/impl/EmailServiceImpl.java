package backend.service.impl;

import backend.entity.Booking;
import backend.entity.User;
import backend.service.EmailService;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.mail.SimpleMailMessage;
import org.springframework.mail.javamail.JavaMailSender;
import org.springframework.mail.javamail.MimeMessageHelper;
import org.springframework.scheduling.annotation.Async;
import org.springframework.stereotype.Service;

import jakarta.mail.internet.MimeMessage;
import java.text.NumberFormat;
import java.time.format.DateTimeFormatter;
import java.util.Locale;

@Service
@RequiredArgsConstructor
@Slf4j
public class EmailServiceImpl implements EmailService {
    
    private final JavaMailSender mailSender;
    
    @Value("${spring.mail.username:khoi14112004@gmail.com}")
    private String fromEmail;
    
    @Value("${app.name:Tour Booking System}")
    private String appName;
    
    @Value("${app.url:http://localhost:5173}")
    private String appUrl;
    
    private static final DateTimeFormatter DATE_FORMATTER = 
            DateTimeFormatter.ofPattern("dd/MM/yyyy");
    
    private static final NumberFormat CURRENCY_FORMATTER = 
            NumberFormat.getCurrencyInstance(new Locale("vi", "VN"));
    
    @Override
    @Async
    public void sendBookingConfirmationEmail(Booking booking) {
        try {
            String subject = String.format("[%s] X√°c nh·∫≠n ƒë·∫∑t tour - %s", 
                    appName, booking.getBookingCode());
            
            String body = buildBookingConfirmationHtml(booking);
            
            sendHtmlEmail(booking.getUser().getEmail(), subject, body);
            
            log.info("‚úÖ Sent booking confirmation email to: {}", booking.getUser().getEmail());
            
        } catch (Exception e) {
            log.error("‚ùå Failed to send booking confirmation email", e);
        }
    }
    
    @Override
    @Async
    public void sendPaymentConfirmationEmail(Booking booking) {
        try {
            String subject = String.format("[%s] X√°c nh·∫≠n thanh to√°n - %s", 
                    appName, booking.getBookingCode());
            
            String body = buildPaymentConfirmationHtml(booking);
            
            sendHtmlEmail(booking.getUser().getEmail(), subject, body);
            
            log.info("‚úÖ Sent payment confirmation email to: {}", booking.getUser().getEmail());
            
        } catch (Exception e) {
            log.error("‚ùå Failed to send payment confirmation email", e);
        }
    }
    
    @Override
    @Async
    public void sendBookingCancellationEmail(Booking booking, String reason) {
        try {
            String subject = String.format("[%s] H·ªßy booking - %s", 
                    appName, booking.getBookingCode());
            
            String body = buildBookingCancellationHtml(booking, reason);
            
            sendHtmlEmail(booking.getUser().getEmail(), subject, body);
            
            log.info("‚úÖ Sent booking cancellation email to: {}", booking.getUser().getEmail());
            
        } catch (Exception e) {
            log.error("‚ùå Failed to send booking cancellation email", e);
        }
    }
    
    @Override
    @Async
    public void sendBookingReminderEmail(Booking booking) {
        try {
            String subject = String.format("[%s] Nh·∫Øc nh·ªü tour s·∫Øp kh·ªüi h√†nh - %s", 
                    appName, booking.getTour().getName());
            
            String body = buildBookingReminderHtml(booking);
            
            sendHtmlEmail(booking.getUser().getEmail(), subject, body);
            
            log.info("‚úÖ Sent booking reminder email to: {}", booking.getUser().getEmail());
            
        } catch (Exception e) {
            log.error("‚ùå Failed to send booking reminder email", e);
        }
    }
    
    @Override
    @Async
    public void sendPasswordResetEmail(User user, String resetToken) {
        try {
            log.info("üîÑ Starting to send password reset email to: {}", user.getEmail());
            log.info("üìß From email: {}", fromEmail);
            log.info("üîó App URL: {}", appUrl);
            
            String subject = String.format("[%s] ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u", appName);
            
            String resetUrl = String.format("%s/reset-password/%s", appUrl, resetToken);
            log.info("üîó Reset URL: {}", resetUrl);
            
            String body = buildPasswordResetHtml(user, resetUrl);
            
            sendHtmlEmail(user.getEmail(), subject, body);
            
            log.info("‚úÖ Sent password reset email to: {}", user.getEmail());
            
        } catch (Exception e) {
            log.error("‚ùå Failed to send password reset email to: {}", user.getEmail(), e);
        }
    }
    
    @Override
    @Async
    public void sendWelcomeEmail(User user) {
        try {
            String subject = String.format("Ch√†o m·ª´ng ƒë·∫øn v·ªõi %s!", appName);
            
            String body = buildWelcomeHtml(user);
            
            sendHtmlEmail(user.getEmail(), subject, body);
            
            log.info("‚úÖ Sent welcome email to: {}", user.getEmail());
            
        } catch (Exception e) {
            log.error("‚ùå Failed to send welcome email", e);
        }
    }
    
    @Override
    @Async
    public void sendVerificationEmail(User user, String token) {
        try {
            String subject = String.format("üîê [%s] X√°c th·ª±c email c·ªßa b·∫°n", appName);
            
            String body = buildVerificationEmailHtml(user, token);
            
            sendHtmlEmail(user.getEmail(), subject, body);
            
            log.info("‚úÖ Sent verification email to: {}", user.getEmail());
            
        } catch (Exception e) {
            log.error("‚ùå Failed to send verification email", e);
        }
    }
    
    @Override
    @Async
    public void sendEmail(String to, String subject, String body) {
        try {
            SimpleMailMessage message = new SimpleMailMessage();
            message.setFrom(fromEmail);
            message.setTo(to);
            message.setSubject(subject);
            message.setText(body);
            
            mailSender.send(message);
            
            log.info("‚úÖ Sent email to: {}", to);
            
        } catch (Exception e) {
            log.error("‚ùå Failed to send email to: {}", to, e);
        }
    }
    
    @Override
    @Async
    public void sendHtmlEmail(String to, String subject, String htmlBody) {
        try {
            log.info("üìß Creating MimeMessage for: {}", to);
            log.info("üìß Subject: {}", subject);
            log.info("üìß From: {}", fromEmail);
            
            MimeMessage message = mailSender.createMimeMessage();
            MimeMessageHelper helper = new MimeMessageHelper(message, true, "UTF-8");
            
            helper.setFrom(fromEmail);
            helper.setTo(to);
            helper.setSubject(subject);
            helper.setText(htmlBody, true);
            
            log.info("üìß Sending email...");
            mailSender.send(message);
            
            log.info("‚úÖ Sent HTML email to: {}", to);
            
        } catch (Exception e) {
            log.error("‚ùå Failed to send HTML email to: {}", to, e);
            log.error("‚ùå Error details: {}", e.getMessage());
            if (e.getCause() != null) {
                log.error("‚ùå Root cause: {}", e.getCause().getMessage());
            }
        }
    }
    
    // ================== HTML Template Builders ==================
    
    private String buildBookingConfirmationHtml(Booking booking) {
        return String.format("""
                <html>
                <body style="font-family: Arial, sans-serif; line-height: 1.6; color: #333;">
                    <div style="max-width: 600px; margin: 0 auto; padding: 20px;">
                        <h2 style="color: #2563eb;">X√°c nh·∫≠n ƒë·∫∑t tour</h2>
                        <p>Xin ch√†o <strong>%s</strong>,</p>
                        <p>C·∫£m ∆°n b·∫°n ƒë√£ ƒë·∫∑t tour t·∫°i %s. ƒê√¢y l√† th√¥ng tin booking c·ªßa b·∫°n:</p>
                        
                        <div style="background: #f3f4f6; padding: 15px; border-radius: 8px; margin: 20px 0;">
                            <p><strong>M√£ booking:</strong> %s</p>
                            <p><strong>Tour:</strong> %s</p>
                            <p><strong>Ng√†y kh·ªüi h√†nh:</strong> %s</p>
                            <p><strong>S·ªë ng∆∞·ªùi:</strong> %d ng∆∞·ªùi l·ªõn, %d tr·∫ª em</p>
                            <p><strong>T·ªïng ti·ªÅn:</strong> %s</p>
                        </div>
                        
                        <p>Vui l√≤ng thanh to√°n ƒë·ªÉ x√°c nh·∫≠n booking c·ªßa b·∫°n.</p>
                        <p>Tr√¢n tr·ªçng,<br/>%s</p>
                    </div>
                </body>
                </html>
                """,
                booking.getUser().getName(),
                appName,
                booking.getBookingCode(),
                booking.getTour().getName(),
                booking.getStartDate().format(DATE_FORMATTER),
                booking.getNumAdults(),
                booking.getNumChildren(),
                CURRENCY_FORMATTER.format(booking.getFinalAmount()),
                appName
        );
    }
    
    private String buildPaymentConfirmationHtml(Booking booking) {
        return String.format("""
                <html>
                <body style="font-family: Arial, sans-serif; line-height: 1.6; color: #333;">
                    <div style="max-width: 600px; margin: 0 auto; padding: 20px;">
                        <h2 style="color: #16a34a;">Thanh to√°n th√†nh c√¥ng!</h2>
                        <p>Xin ch√†o <strong>%s</strong>,</p>
                        <p>Ch√∫ng t√¥i ƒë√£ nh·∫≠n ƒë∆∞·ª£c thanh to√°n c·ªßa b·∫°n cho booking <strong>%s</strong>.</p>
                        
                        <div style="background: #f0fdf4; padding: 15px; border-radius: 8px; margin: 20px 0; border-left: 4px solid #16a34a;">
                            <p><strong>Tour:</strong> %s</p>
                            <p><strong>S·ªë ti·ªÅn:</strong> %s</p>
                            <p><strong>Tr·∫°ng th√°i:</strong> ƒê√£ thanh to√°n</p>
                        </div>
                        
                        <p>Ch√∫c b·∫°n c√≥ m·ªôt chuy·∫øn ƒëi vui v·∫ª!</p>
                        <p>Tr√¢n tr·ªçng,<br/>%s</p>
                    </div>
                </body>
                </html>
                """,
                booking.getUser().getName(),
                booking.getBookingCode(),
                booking.getTour().getName(),
                CURRENCY_FORMATTER.format(booking.getFinalAmount()),
                appName
        );
    }
    
    private String buildBookingCancellationHtml(Booking booking, String reason) {
        return String.format("""
                <html>
                <body style="font-family: Arial, sans-serif; line-height: 1.6; color: #333;">
                    <div style="max-width: 600px; margin: 0 auto; padding: 20px;">
                        <h2 style="color: #dc2626;">H·ªßy booking</h2>
                        <p>Xin ch√†o <strong>%s</strong>,</p>
                        <p>Booking <strong>%s</strong> c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c h·ªßy.</p>
                        
                        <div style="background: #fef2f2; padding: 15px; border-radius: 8px; margin: 20px 0; border-left: 4px solid #dc2626;">
                            <p><strong>Tour:</strong> %s</p>
                            <p><strong>L√Ω do:</strong> %s</p>
                        </div>
                        
                        <p>N·∫øu b·∫°n c·∫ßn h·ªó tr·ª£, vui l√≤ng li√™n h·ªá v·ªõi ch√∫ng t√¥i.</p>
                        <p>Tr√¢n tr·ªçng,<br/>%s</p>
                    </div>
                </body>
                </html>
                """,
                booking.getUser().getName(),
                booking.getBookingCode(),
                booking.getTour().getName(),
                reason,
                appName
        );
    }
    
    private String buildBookingReminderHtml(Booking booking) {
        return String.format("""
                <html>
                <body style="font-family: Arial, sans-serif; line-height: 1.6; color: #333;">
                    <div style="max-width: 600px; margin: 0 auto; padding: 20px;">
                        <h2 style="color: #f59e0b;">Tour s·∫Øp kh·ªüi h√†nh!</h2>
                        <p>Xin ch√†o <strong>%s</strong>,</p>
                        <p>Tour <strong>%s</strong> c·ªßa b·∫°n s·∫Øp kh·ªüi h√†nh v√†o <strong>%s</strong>.</p>
                        
                        <div style="background: #fffbeb; padding: 15px; border-radius: 8px; margin: 20px 0; border-left: 4px solid #f59e0b;">
                            <p>Vui l√≤ng chu·∫©n b·ªã h√†nh l√Ω v√† c√≥ m·∫∑t ƒë√∫ng gi·ªù t·∫°i ƒëi·ªÉm h·∫πn.</p>
                        </div>
                        
                        <p>Ch√∫c b·∫°n c√≥ m·ªôt chuy·∫øn ƒëi tuy·ªát v·ªùi!</p>
                        <p>Tr√¢n tr·ªçng,<br/>%s</p>
                    </div>
                </body>
                </html>
                """,
                booking.getUser().getName(),
                booking.getTour().getName(),
                booking.getStartDate().format(DATE_FORMATTER),
                appName
        );
    }
    
    private String buildPasswordResetHtml(User user, String resetUrl) {
        return String.format("""
                <html>
                <body style="font-family: Arial, sans-serif; line-height: 1.6; color: #333;">
                    <div style="max-width: 600px; margin: 0 auto; padding: 20px;">
                        <h2 style="color: #2563eb;">ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u</h2>
                        <p>Xin ch√†o <strong>%s</strong>,</p>
                        <p>B·∫°n ƒë√£ y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u. Click v√†o link b√™n d∆∞·ªõi ƒë·ªÉ ƒë·∫∑t l·∫°i:</p>
                        
                        <div style="margin: 30px 0; text-align: center;">
                            <a href="%s" style="background: #2563eb; color: white; padding: 12px 24px; text-decoration: none; border-radius: 6px; display: inline-block;">
                                ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u
                            </a>
                        </div>
                        
                        <p style="color: #6b7280; font-size: 14px;">Link n√†y s·∫Ω h·∫øt h·∫°n sau 1 gi·ªù.</p>
                        <p style="color: #6b7280; font-size: 14px;">N·∫øu b·∫°n kh√¥ng y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u, vui l√≤ng b·ªè qua email n√†y.</p>
                        <p>Tr√¢n tr·ªçng,<br/>%s</p>
                    </div>
                </body>
                </html>
                """,
                user.getName(),
                resetUrl,
                appName
        );
    }
    
    private String buildWelcomeHtml(User user) {
        return String.format("""
                <html>
                <body style="font-family: Arial, sans-serif; line-height: 1.6; color: #333;">
                    <div style="max-width: 600px; margin: 0 auto; padding: 20px;">
                        <h2 style="color: #2563eb;">Ch√†o m·ª´ng ƒë·∫øn v·ªõi %s!</h2>
                        <p>Xin ch√†o <strong>%s</strong>,</p>
                        <p>C·∫£m ∆°n b·∫°n ƒë√£ ƒëƒÉng k√Ω t√†i kho·∫£n t·∫°i %s.</p>
                        
                        <div style="background: #eff6ff; padding: 15px; border-radius: 8px; margin: 20px 0;">
                            <p>B·∫°n c√≥ th·ªÉ b·∫Øt ƒë·∫ßu kh√°m ph√° c√°c tour du l·ªãch tuy·ªát v·ªùi c·ªßa ch√∫ng t√¥i ngay b√¢y gi·ªù!</p>
                        </div>
                        
                        <div style="margin: 30px 0; text-align: center;">
                            <a href="%s" style="background: #2563eb; color: white; padding: 12px 24px; text-decoration: none; border-radius: 6px; display: inline-block;">
                                Kh√°m ph√° tour
                            </a>
                        </div>
                        
                        <p>Tr√¢n tr·ªçng,<br/>%s</p>
                    </div>
                </body>
                </html>
                """,
                appName,
                user.getName(),
                appName,
                appUrl + "/tours",
                appName
        );
    }
    
    private String buildVerificationEmailHtml(User user, String token) {
        String verificationUrl = appUrl + "/auth/verify-email?token=" + token;
        
        return String.format("""
                <html>
                <body style="font-family: Arial, sans-serif; line-height: 1.6; color: #333;">
                    <div style="max-width: 600px; margin: 0 auto; padding: 20px;">
                        <div style="text-align: center; margin-bottom: 30px;">
                            <h1 style="color: #2563eb; margin: 0;">üîê X√°c th·ª±c Email</h1>
                        </div>
                        
                        <p>Xin ch√†o <strong>%s</strong>,</p>
                        <p>C·∫£m ∆°n b·∫°n ƒë√£ ƒëƒÉng k√Ω t√†i kho·∫£n t·∫°i <strong>%s</strong>!</p>
                        
                        <div style="background: #fef3c7; border-left: 4px solid #f59e0b; padding: 15px; margin: 20px 0;">
                            <p style="margin: 0; color: #92400e;">
                                ‚ö†Ô∏è <strong>B·∫°n c·∫ßn x√°c th·ª±c email ƒë·ªÉ s·ª≠ d·ª•ng t√†i kho·∫£n.</strong>
                            </p>
                        </div>
                        
                        <p>Vui l√≤ng nh·∫•n v√†o n√∫t b√™n d∆∞·ªõi ƒë·ªÉ x√°c th·ª±c email c·ªßa b·∫°n:</p>
                        
                        <div style="margin: 30px 0; text-align: center;">
                            <a href="%s" style="background: #2563eb; color: white; padding: 14px 28px; text-decoration: none; border-radius: 6px; display: inline-block; font-weight: bold;">
                                ‚úÖ X√°c th·ª±c Email
                            </a>
                        </div>
                        
                        <div style="background: #f3f4f6; padding: 15px; border-radius: 8px; margin: 20px 0;">
                            <p style="margin: 0; font-size: 14px; color: #6b7280;">
                                Ho·∫∑c copy link sau v√†o tr√¨nh duy·ªát:<br/>
                                <a href="%s" style="color: #2563eb; word-break: break-all;">%s</a>
                            </p>
                        </div>
                        
                        <div style="background: #fee2e2; border: 1px solid #fecaca; padding: 15px; border-radius: 8px; margin: 20px 0;">
                            <p style="margin: 0; font-size: 14px; color: #991b1b;">
                                ‚è∞ <strong>Link x√°c th·ª±c c√≥ hi·ªáu l·ª±c trong 24 gi·ªù.</strong><br/>
                                N·∫øu b·∫°n kh√¥ng ƒëƒÉng k√Ω t√†i kho·∫£n n√†y, vui l√≤ng b·ªè qua email n√†y.
                            </p>
                        </div>
                        
                        <hr style="border: none; border-top: 1px solid #e5e7eb; margin: 30px 0;"/>
                        
                        <p style="font-size: 14px; color: #6b7280;">
                            Tr√¢n tr·ªçng,<br/>
                            <strong>%s Team</strong>
                        </p>
                    </div>
                </body>
                </html>
                """,
                user.getName(),
                appName,
                verificationUrl,
                verificationUrl,
                verificationUrl,
                appName
        );
    }
    
    @Override
    @Async
    public void sendSimpleEmail(String to, String subject, String body) {
        try {
            SimpleMailMessage message = new SimpleMailMessage();
            message.setFrom(fromEmail);
            message.setTo(to);
            message.setSubject(subject);
            message.setText(body);
            
            mailSender.send(message);
            
            log.info("‚úÖ Sent simple email to: {}", to);
            
        } catch (Exception e) {
            log.error("‚ùå Failed to send simple email to: {}", to, e);
            throw new RuntimeException("Failed to send email", e);
        }
    }
}

