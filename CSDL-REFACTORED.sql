-- =============================
-- CSDL ƒê√É ƒê∆Ø·ª¢C T√ÅI C·∫§U TR√öC
-- Database: doan
-- S·ª≠a c√°c v·∫•n ƒë·ªÅ logic v√† b·ªï sung ƒë·∫ßy ƒë·ªß
-- =============================

USE doan;

-- =============================
-- 1. B·∫£ng ng∆∞·ªùi d√πng & ph√¢n quy·ªÅn
-- =============================
CREATE TABLE roles (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(50) UNIQUE NOT NULL,
    description VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

INSERT INTO roles (name, description) VALUES 
('Admin', 'Qu·∫£n tr·ªã vi√™n h·ªá th·ªëng'),
('Staff', 'Nh√¢n vi√™n'),
('Customer', 'Kh√°ch h√†ng');

CREATE TABLE users (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(150) NOT NULL,
    email VARCHAR(150) UNIQUE NOT NULL,
    password VARCHAR(255) NOT NULL,
    role_id BIGINT,
    status ENUM('Active', 'Inactive', 'Banned') DEFAULT 'Active',
    avatar_url VARCHAR(255),
    phone VARCHAR(20),
    address VARCHAR(255),
    dob DATE,
    gender ENUM('Male', 'Female', 'Other'),
    email_verified_at TIMESTAMP NULL,
    -- Th·ªëng k√™ ng∆∞·ªùi d√πng
    login_count INT DEFAULT 0,
    total_bookings INT DEFAULT 0,
    total_tour_views INT DEFAULT 0,
    last_login_at TIMESTAMP NULL,
    last_activity_at TIMESTAMP NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    deleted_at TIMESTAMP NULL,
    FOREIGN KEY (role_id) REFERENCES roles(id),
    INDEX idx_users_email (email),
    INDEX idx_users_status (status),
    INDEX idx_users_role_id (role_id)
);

-- =============================
-- 2. B·∫£ng danh m·ª•c tour (S·ª¨A - Theme-based, kh√¥ng ph·∫£i location)
-- =============================
CREATE TABLE categories (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(150) NOT NULL,
    slug VARCHAR(150) UNIQUE NOT NULL,
    description TEXT,
    image_url VARCHAR(255),
    icon VARCHAR(100), -- Icon cho category
    parent_id BIGINT NULL, -- Danh m·ª•c cha (ƒë·ªÉ t·∫°o sub-category)
    display_order INT DEFAULT 0, -- Th·ª© t·ª± hi·ªÉn th·ªã
    is_featured BOOLEAN DEFAULT FALSE, -- Category n·ªïi b·∫≠t
    status ENUM('Active','Inactive') DEFAULT 'Active',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (parent_id) REFERENCES categories(id) ON DELETE SET NULL,
    INDEX idx_categories_slug (slug),
    INDEX idx_categories_parent_id (parent_id),
    INDEX idx_categories_status (status),
    INDEX idx_categories_display_order (display_order)
);

-- Danh m·ª•c ƒë√∫ng (theo theme/lo·∫°i h√¨nh, KH√îNG ph·∫£i ƒë·ªãa ƒëi·ªÉm)
INSERT INTO categories (id, name, slug, description, icon, display_order, is_featured, status) VALUES
(1, 'Du l·ªãch bi·ªÉn ƒë·∫£o', 'du-lich-bien-dao', 'T·∫≠n h∆∞·ªüng kh√¥ng gian bi·ªÉn xanh c√°t tr·∫Øng', 'üèñÔ∏è', 1, TRUE, 'Active'),
(2, 'Du l·ªãch n√∫i r·ª´ng', 'du-lich-nui-rung', 'Kh√°m ph√° thi√™n nhi√™n h√πng vƒ©', '‚õ∞Ô∏è', 2, TRUE, 'Active'),
(3, 'Du l·ªãch vƒÉn h√≥a', 'du-lich-van-hoa', 'T√¨m hi·ªÉu l·ªãch s·ª≠ v√† di s·∫£n', 'üèõÔ∏è', 3, TRUE, 'Active'),
(4, 'Du l·ªãch t√¢m linh', 'du-lich-tam-linh', 'H√†nh tr√¨nh t√¢m linh thanh t·ªãnh', 'üôè', 4, FALSE, 'Active'),
(5, 'Du l·ªãch ngh·ªâ d∆∞·ª°ng', 'du-lich-nghi-duong', 'Th∆∞ gi√£n v√† chƒÉm s√≥c s·ª©c kh·ªèe', 'üíÜ', 5, TRUE, 'Active'),
(6, 'Du l·ªãch kh√°m ph√°', 'du-lich-kham-pha', 'Tr·∫£i nghi·ªám v√† kh√°m ph√° m·ªõi', 'üß≠', 6, FALSE, 'Active'),
(7, 'Du l·ªãch ·∫©m th·ª±c', 'du-lich-am-thuc', 'Th∆∞·ªüng th·ª©c ƒë·∫∑c s·∫£n ƒë·ªãa ph∆∞∆°ng', 'üçú', 7, FALSE, 'Active'),
(8, 'Du l·ªãch m·∫°o hi·ªÉm', 'du-lich-mao-hiem', 'Th·ª≠ th√°ch v√† phi√™u l∆∞u', 'ü™Ç', 8, FALSE, 'Active'),
(9, 'Du l·ªãch MICE', 'du-lich-mice', 'H·ªôi ngh·ªã, s·ª± ki·ªán, team building', 'üéØ', 9, FALSE, 'Active'),
(10, 'Du l·ªãch cao c·∫•p', 'du-lich-cao-cap', 'Tr·∫£i nghi·ªám sang tr·ªçng ƒë·∫≥ng c·∫•p', 'üíé', 10, TRUE, 'Active');

-- =============================
-- 3. B·∫£ng tour (S·ª¨A - B·ªï sung ƒë·∫ßy ƒë·ªß tr∆∞·ªùng)
-- =============================
CREATE TABLE tours (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(150) NOT NULL,
    slug VARCHAR(150) UNIQUE NOT NULL,
    short_description TEXT,
    description TEXT,
    highlights TEXT, -- ƒêi·ªÉm nh·∫•n tour (JSON array)
    
    -- Gi√° c·∫£
    price DECIMAL(12,2) NOT NULL, -- Gi√° g·ªëc
    sale_price DECIMAL(12,2), -- Gi√° sale
    child_price DECIMAL(12,2), -- Gi√° tr·∫ª em
    infant_price DECIMAL(12,2), -- Gi√° tr·∫ª nh·ªè
    
    -- Th√¥ng tin c∆° b·∫£n
    duration INT NOT NULL, -- S·ªë ng√†y
    min_people INT DEFAULT 1, -- S·ªë ng∆∞·ªùi t·ªëi thi·ªÉu
    max_people INT NOT NULL, -- S·ªë ng∆∞·ªùi t·ªëi ƒëa
    
    -- Ph√¢n lo·∫°i
    category_id BIGINT,
    tour_type ENUM('DOMESTIC','INTERNATIONAL') DEFAULT 'DOMESTIC',
    
    -- ƒê·ªãa ƒëi·ªÉm (S·ª¨A LOGIC)
    departure_location VARCHAR(100), -- ƒêi·ªÉm kh·ªüi h√†nh: "H√† N·ªôi", "TP.HCM"
    destination VARCHAR(255), -- ƒêi·ªÉm ƒë·∫øn ch√≠nh: "H·∫° Long - Ninh B√¨nh"
    destinations TEXT, -- C√°c ƒëi·ªÉm ƒë·∫øn (JSON array): ["H√† N·ªôi", "H·∫° Long", "Ninh B√¨nh"]
    region VARCHAR(50), -- V√πng mi·ªÅn: "Mi·ªÅn B·∫Øc", "Mi·ªÅn Trung", "ƒê√¥ng Nam √Å", "ƒê√¥ng B·∫Øc √Å"
    country VARCHAR(100), -- Qu·ªëc gia: "Vi·ªát Nam", "Nh·∫≠t B·∫£n", "Th√°i Lan"
    country_code VARCHAR(3), -- M√£ qu·ªëc gia: VN, JP, TH
    
    -- Ph∆∞∆°ng ti·ªán & d·ªãch v·ª•
    transportation VARCHAR(100), -- Ph∆∞∆°ng ti·ªán: "M√°y bay + Xe kh√°ch", "T√†u h·ªèa"
    accommodation VARCHAR(100), -- Kh√°ch s·∫°n: "3 sao", "4 sao", "Resort 5 sao"
    meals_included VARCHAR(100), -- B·ªØa ƒÉn: "3 b·ªØa/ng√†y", "ƒÇn s√°ng"
    
    -- D·ªãch v·ª• bao g·ªìm/kh√¥ng bao g·ªìm
    included_services TEXT, -- D·ªãch v·ª• BAO G·ªíM (JSON array)
    excluded_services TEXT, -- D·ªãch v·ª• KH√îNG BAO G·ªíM (JSON array)
    
    -- Visa & bay
    visa_required BOOLEAN DEFAULT FALSE,
    visa_info TEXT, -- Th√¥ng tin visa chi ti·∫øt
    flight_included BOOLEAN DEFAULT FALSE,
    
    -- Ch√≠nh s√°ch
    cancellation_policy TEXT, -- Ch√≠nh s√°ch h·ªßy tour
    note TEXT, -- Ghi ch√∫ quan tr·ªçng
    suitable_for VARCHAR(255), -- Ph√π h·ª£p: "Gia ƒë√¨nh c√≥ tr·∫ª nh·ªè", "C·∫∑p ƒë√¥i", "Nh√≥m b·∫°n"
    
    -- H√¨nh ·∫£nh
    main_image VARCHAR(255),
    
    -- Tr·∫°ng th√°i
    status ENUM('Active','Inactive','Sold_Out') DEFAULT 'Active',
    is_featured BOOLEAN DEFAULT FALSE,
    view_count INT DEFAULT 0, -- S·ªë l∆∞·ª£t xem
    
    -- Timestamps
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    deleted_at TIMESTAMP NULL,
    
    FOREIGN KEY (category_id) REFERENCES categories(id),
    INDEX idx_tours_slug (slug),
    INDEX idx_tours_category_id (category_id),
    INDEX idx_tours_tour_type (tour_type),
    INDEX idx_tours_departure_location (departure_location),
    INDEX idx_tours_destination (destination),
    INDEX idx_tours_region (region),
    INDEX idx_tours_country_code (country_code),
    INDEX idx_tours_price (price),
    INDEX idx_tours_status (status),
    INDEX idx_tours_is_featured (is_featured),
    FULLTEXT idx_tours_search (name, short_description, description)
);

-- =============================
-- 4. B·∫£ng l·ªãch kh·ªüi h√†nh (M·ªöI - QUAN TR·ªåNG)
-- =============================
CREATE TABLE tour_schedules (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    tour_id BIGINT NOT NULL,
    departure_date DATE NOT NULL,
    return_date DATE,
    total_seats INT NOT NULL, -- T·ªïng s·ªë ch·ªó
    available_seats INT NOT NULL, -- S·ªë ch·ªó c√≤n l·∫°i
    adult_price DECIMAL(12,2), -- Gi√° ng∆∞·ªùi l·ªõn (c√≥ th·ªÉ kh√°c gi√° c∆° b·∫£n)
    child_price DECIMAL(12,2), -- Gi√° tr·∫ª em
    status ENUM('Available','Full','Cancelled','Completed') DEFAULT 'Available',
    note TEXT, -- Ghi ch√∫ l·ªãch kh·ªüi h√†nh
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (tour_id) REFERENCES tours(id) ON DELETE CASCADE,
    INDEX idx_schedules_tour_id (tour_id),
    INDEX idx_schedules_departure_date (departure_date),
    INDEX idx_schedules_status (status)
);

-- =============================
-- 5. B·∫£ng gi√° tour ƒë·ªông (M·ªöI)
-- =============================
CREATE TABLE tour_prices (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    tour_id BIGINT NOT NULL,
    price_type ENUM('Adult','Child','Infant','Single_Supplement') NOT NULL,
    base_price DECIMAL(12,2) NOT NULL,
    season_price DECIMAL(12,2), -- Gi√° theo m√πa
    season_name VARCHAR(50), -- T√™n m√πa: "Cao ƒëi·ªÉm", "Th·∫•p ƒëi·ªÉm"
    valid_from DATE NOT NULL,
    valid_to DATE NOT NULL,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (tour_id) REFERENCES tours(id) ON DELETE CASCADE,
    INDEX idx_prices_tour_id (tour_id),
    INDEX idx_prices_valid_dates (valid_from, valid_to)
);

-- =============================
-- 6. B·∫£ng ƒë·ªëi t√°c (DI CHUY·ªÇN L√äN TR∆Ø·ªöC)
-- =============================
CREATE TABLE partners (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(150) NOT NULL,
    type ENUM('Hotel','Restaurant','Transport','TourOperator','Insurance','Other') NOT NULL,
    address VARCHAR(255),
    phone VARCHAR(20),
    email VARCHAR(150),
    website VARCHAR(255),
    avatar_url VARCHAR(255),
    description TEXT,
    rating DECIMAL(2,1),
    status ENUM('Active','Inactive') DEFAULT 'Active',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_partners_type (type),
    INDEX idx_partners_status (status)
);

-- =============================
-- 7. B·∫£ng khuy·∫øn m√£i (DI CHUY·ªÇN L√äN)
-- =============================
CREATE TABLE promotions (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) UNIQUE NOT NULL,
    name VARCHAR(150) NOT NULL,
    description TEXT,
    type ENUM('Percentage','Fixed','Free_Service') NOT NULL,
    value DECIMAL(12,2) NOT NULL,
    max_discount DECIMAL(12,2), -- Gi·∫£m t·ªëi ƒëa (cho % discount)
    min_order_amount DECIMAL(12,2), -- Gi√° tr·ªã ƒë∆°n h√†ng t·ªëi thi·ªÉu
    usage_limit INT DEFAULT 0, -- Gi·ªõi h·∫°n s·ªë l·∫ßn s·ª≠ d·ª•ng (0 = unlimited)
    used_count INT DEFAULT 0, -- S·ªë l·∫ßn ƒë√£ s·ª≠ d·ª•ng
    per_user_limit INT DEFAULT 1, -- Gi·ªõi h·∫°n m·ªói user
    applicable_tours TEXT, -- √Åp d·ª•ng cho tour n√†o (JSON array tour_ids)
    start_date TIMESTAMP,
    end_date TIMESTAMP,
    status ENUM('Active','Inactive','Expired') DEFAULT 'Active',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_promotions_code (code),
    INDEX idx_promotions_status (status)
);

-- =============================
-- 8. B·∫£ng chi ti·∫øt l·ªãch tr√¨nh (S·ª¨A - B·ªï sung tr∆∞·ªùng)
-- =============================
CREATE TABLE tour_itineraries (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    tour_id BIGINT,
    day_number INT NOT NULL,
    title VARCHAR(255),
    description TEXT,
    location VARCHAR(100), -- ƒê·ªãa ƒëi·ªÉm c·ªßa ng√†y n√†y
    activities TEXT, -- C√°c ho·∫°t ƒë·ªông (JSON array)
    meals VARCHAR(100), -- B·ªØa ƒÉn: "S√°ng, Tr∆∞a, T·ªëi"
    accommodation VARCHAR(255), -- N∆°i ngh·ªâ
    images TEXT, -- H√¨nh ·∫£nh l·ªãch tr√¨nh (JSON array)
    -- Th√¥ng tin ƒë·ªëi t√°c
    partner_id BIGINT NULL,
    accommodation_partner_id BIGINT NULL,
    meals_partner_id BIGINT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (tour_id) REFERENCES tours(id) ON DELETE CASCADE,
    FOREIGN KEY (partner_id) REFERENCES partners(id) ON DELETE SET NULL,
    FOREIGN KEY (accommodation_partner_id) REFERENCES partners(id) ON DELETE SET NULL,
    FOREIGN KEY (meals_partner_id) REFERENCES partners(id) ON DELETE SET NULL,
    INDEX idx_itineraries_tour_id (tour_id)
);

-- =============================
-- 9. B·∫£ng booking (S·ª¨A - T√°ch status th√†nh 2 tr∆∞·ªùng)
-- =============================
CREATE TABLE bookings (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    booking_code VARCHAR(50) UNIQUE NOT NULL,
    user_id BIGINT,
    tour_id BIGINT,
    schedule_id BIGINT, -- Link ƒë·∫øn l·ªãch kh·ªüi h√†nh c·ª• th·ªÉ
    
    -- Th√¥ng tin ng∆∞·ªùi ƒë·∫∑t
    customer_name VARCHAR(150) NOT NULL, -- C√≥ th·ªÉ kh√°c user
    customer_email VARCHAR(150) NOT NULL,
    customer_phone VARCHAR(20) NOT NULL,
    customer_address VARCHAR(255),
    
    -- Th√¥ng tin booking
    start_date DATE NOT NULL,
    num_adults INT DEFAULT 1,
    num_children INT DEFAULT 0,
    num_infants INT DEFAULT 0,
    
    -- Gi√°
    unit_price DECIMAL(12,2) NOT NULL, -- Gi√° ƒë∆°n v·ªã
    total_price DECIMAL(12,2) NOT NULL, -- T·ªïng gi√°
    discount_amount DECIMAL(12,2) DEFAULT 0, -- S·ªë ti·ªÅn gi·∫£m
    final_amount DECIMAL(12,2) NOT NULL, -- S·ªë ti·ªÅn cu·ªëi c√πng
    
    promotion_id BIGINT NULL,
    special_requests TEXT,
    
    -- Tr·∫°ng th√°i (T√ÅCH RA 2 TR∆Ø·ªúNG)
    confirmation_status ENUM('Pending','Confirmed','Cancelled','Rejected') DEFAULT 'Pending',
    payment_status ENUM('Unpaid','Partially_Paid','Paid','Refunded') DEFAULT 'Unpaid',
    
    -- L√Ω do h·ªßy
    cancellation_reason TEXT,
    cancelled_by BIGINT, -- User ID ng∆∞·ªùi h·ªßy
    cancelled_at TIMESTAMP NULL,
    
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE SET NULL,
    FOREIGN KEY (tour_id) REFERENCES tours(id) ON DELETE RESTRICT,
    FOREIGN KEY (schedule_id) REFERENCES tour_schedules(id) ON DELETE SET NULL,
    FOREIGN KEY (promotion_id) REFERENCES promotions(id) ON DELETE SET NULL,
    FOREIGN KEY (cancelled_by) REFERENCES users(id) ON DELETE SET NULL,
    
    INDEX idx_bookings_booking_code (booking_code),
    INDEX idx_bookings_user_id (user_id),
    INDEX idx_bookings_tour_id (tour_id),
    INDEX idx_bookings_confirmation_status (confirmation_status),
    INDEX idx_bookings_payment_status (payment_status),
    INDEX idx_bookings_start_date (start_date)
);

-- =============================
-- 10. B·∫£ng th√¥ng tin h√†nh kh√°ch (M·ªöI - QUAN TR·ªåNG)
-- =============================
CREATE TABLE booking_participants (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    booking_id BIGINT NOT NULL,
    full_name VARCHAR(150) NOT NULL,
    gender ENUM('Male','Female','Other'),
    dob DATE,
    id_number VARCHAR(50), -- CMND/Passport
    id_type ENUM('CMND','CCCD','Passport') DEFAULT 'CMND',
    nationality VARCHAR(50) DEFAULT 'Vi·ªát Nam',
    participant_type ENUM('Adult','Child','Infant') NOT NULL,
    special_requirements TEXT, -- Y√™u c·∫ßu ƒë·∫∑c bi·ªát (ƒÉn chay, d·ªã ·ª©ng...)
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (booking_id) REFERENCES bookings(id) ON DELETE CASCADE,
    INDEX idx_participants_booking_id (booking_id)
);

-- =============================
-- 11. B·∫£ng thanh to√°n (S·ª¨A - B·ªï sung tr∆∞·ªùng)
-- =============================
CREATE TABLE payments (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    booking_id BIGINT NOT NULL,
    payment_code VARCHAR(100) UNIQUE, -- M√£ thanh to√°n n·ªôi b·ªô
    
    amount DECIMAL(12,2) NOT NULL,
    payment_method VARCHAR(50), -- MoMo, VNPay, Banking, Cash
    payment_provider VARCHAR(50), -- T√™n nh√† cung c·∫•p
    
    -- Transaction IDs
    transaction_id VARCHAR(100), -- M√£ GD n·ªôi b·ªô
    provider_transaction_id VARCHAR(200), -- M√£ GD t·ª´ nh√† cung c·∫•p (MoMo, VNPay...)
    
    status ENUM('Pending','Completed','Failed','Refunded','Cancelled') DEFAULT 'Pending',
    
    -- Th·ªùi gian
    paid_at TIMESTAMP NULL,
    refunded_at TIMESTAMP NULL,
    
    -- Ho√†n ti·ªÅn
    refund_amount DECIMAL(12,2) DEFAULT 0,
    refund_reason TEXT,
    
    payment_note TEXT,
    
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    FOREIGN KEY (booking_id) REFERENCES bookings(id) ON DELETE RESTRICT,
    INDEX idx_payments_booking_id (booking_id),
    INDEX idx_payments_payment_code (payment_code),
    INDEX idx_payments_transaction_id (transaction_id),
    INDEX idx_payments_status (status)
);

-- =============================
-- 12. B·∫£ng ƒë√°nh gi√° (S·ª¨A - B·ªï sung tr∆∞·ªùng)
-- =============================
CREATE TABLE reviews (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    user_id BIGINT,
    tour_id BIGINT,
    booking_id BIGINT,
    
    rating TINYINT CHECK (rating BETWEEN 1 AND 5),
    comment TEXT,
    images TEXT, -- H√¨nh ·∫£nh ƒë√°nh gi√° (JSON array URLs)
    
    -- Th·ªëng k√™
    helpful_count INT DEFAULT 0, -- S·ªë ng∆∞·ªùi th·∫•y h·ªØu √≠ch
    
    -- Ph·∫£n h·ªìi t·ª´ admin
    admin_reply TEXT,
    replied_by BIGINT, -- Admin ID
    replied_at TIMESTAMP NULL,
    
    status ENUM('Pending','Approved','Rejected') DEFAULT 'Pending',
    rejection_reason TEXT,
    
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE SET NULL,
    FOREIGN KEY (tour_id) REFERENCES tours(id) ON DELETE CASCADE,
    FOREIGN KEY (booking_id) REFERENCES bookings(id) ON DELETE CASCADE,
    FOREIGN KEY (replied_by) REFERENCES users(id) ON DELETE SET NULL,
    
    INDEX idx_reviews_tour_id (tour_id),
    INDEX idx_reviews_user_id (user_id),
    INDEX idx_reviews_status (status),
    INDEX idx_reviews_rating (rating)
);

-- =============================
-- 13. B·∫£ng h√¨nh ·∫£nh tour
-- =============================
CREATE TABLE tour_images (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    tour_id BIGINT,
    image_url VARCHAR(255) NOT NULL,
    caption VARCHAR(255),
    display_order INT DEFAULT 0,
    is_primary BOOLEAN DEFAULT FALSE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (tour_id) REFERENCES tours(id) ON DELETE CASCADE,
    INDEX idx_tour_images_tour_id (tour_id)
);

-- =============================
-- 14. Danh s√°ch y√™u th√≠ch (M·ªöI)
-- =============================
CREATE TABLE wishlists (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    user_id BIGINT NOT NULL,
    tour_id BIGINT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
    FOREIGN KEY (tour_id) REFERENCES tours(id) ON DELETE CASCADE,
    UNIQUE KEY unique_wishlist (user_id, tour_id),
    INDEX idx_wishlists_user_id (user_id),
    INDEX idx_wishlists_tour_id (tour_id)
);

-- =============================
-- 15. C√¢u h·ªèi th∆∞·ªùng g·∫∑p (M·ªöI)
-- =============================
CREATE TABLE tour_faqs (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    tour_id BIGINT NOT NULL,
    question TEXT NOT NULL,
    answer TEXT NOT NULL,
    display_order INT DEFAULT 0,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (tour_id) REFERENCES tours(id) ON DELETE CASCADE,
    INDEX idx_faqs_tour_id (tour_id)
);

-- =============================
-- 16. ƒê·ªëi t∆∞·ª£ng kh√°ch h√†ng
-- =============================
CREATE TABLE target_audiences (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    description VARCHAR(255),
    icon VARCHAR(50)
);

INSERT INTO target_audiences (name, description, icon) VALUES
('Gia ƒë√¨nh', 'Ph√π h·ª£p cho gia ƒë√¨nh c√≥ tr·∫ª em', 'üë®‚Äçüë©‚Äçüëß‚Äçüë¶'),
('C·∫∑p ƒë√¥i', 'L√Ω t∆∞·ªüng cho c·∫∑p ƒë√¥i', 'üíë'),
('Nh√≥m b·∫°n', 'Th√≠ch h·ª£p cho nh√≥m b·∫°n ƒëi ch∆°i', 'üë•'),
('Ng∆∞·ªùi cao tu·ªïi', 'Tour nh·∫π nh√†ng cho ng∆∞·ªùi cao tu·ªïi', 'üë¥'),
('Du kh√°ch solo', 'Ph√π h·ª£p cho ng∆∞·ªùi ƒëi m·ªôt m√¨nh', 'üß≥'),
('Doanh nghi·ªáp', 'Tour MICE v√† team building', 'üè¢');

CREATE TABLE tour_target_audience (
    tour_id BIGINT,
    target_audience_id BIGINT,
    PRIMARY KEY (tour_id, target_audience_id),
    FOREIGN KEY (tour_id) REFERENCES tours(id) ON DELETE CASCADE,
    FOREIGN KEY (target_audience_id) REFERENCES target_audiences(id) ON DELETE CASCADE
);

-- =============================
-- 17. Li√™n h·ªá & h·ªó tr·ª£
-- =============================
CREATE TABLE contact_requests (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(150) NOT NULL,
    email VARCHAR(150) NOT NULL,
    phone VARCHAR(20),
    subject VARCHAR(255),
    message TEXT,
    tour_interest VARCHAR(255),
    status ENUM('New','In_Progress','Resolved','Closed') DEFAULT 'New',
    assigned_to BIGINT, -- Staff ID
    admin_note TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (assigned_to) REFERENCES users(id) ON DELETE SET NULL,
    INDEX idx_contact_status (status)
);

-- =============================
-- 18. Th√¥ng b√°o & Logs
-- =============================
CREATE TABLE notifications (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    user_id BIGINT,
    title VARCHAR(255),
    message TEXT NOT NULL,
    type ENUM('Info','Success','Warning','Error') DEFAULT 'Info',
    link VARCHAR(255), -- Link li√™n quan
    is_read BOOLEAN DEFAULT FALSE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
    INDEX idx_notifications_user_id (user_id),
    INDEX idx_notifications_is_read (is_read)
);

CREATE TABLE logs (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    user_id BIGINT,
    action VARCHAR(255) NOT NULL,
    entity_type VARCHAR(50), -- Tour, Booking, User...
    entity_id BIGINT,
    old_value TEXT, -- Gi√° tr·ªã c≈© (JSON)
    new_value TEXT, -- Gi√° tr·ªã m·ªõi (JSON)
    ip_address VARCHAR(45),
    user_agent TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE SET NULL,
    INDEX idx_logs_user_id (user_id),
    INDEX idx_logs_entity (entity_type, entity_id),
    INDEX idx_logs_created_at (created_at)
);

-- =============================
-- 19. Ho·∫°t ƒë·ªông ng∆∞·ªùi d√πng
-- =============================
CREATE TABLE user_activities (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    user_id BIGINT NOT NULL,
    activity_type VARCHAR(100) NOT NULL,
    activity_data TEXT,
    ip_address VARCHAR(45),
    user_agent TEXT,
    session_id VARCHAR(255),
    page_url VARCHAR(500),
    referer_url VARCHAR(500),
    duration_seconds INT DEFAULT 0,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
    INDEX idx_user_activities_user_id (user_id),
    INDEX idx_user_activities_activity_type (activity_type),
    INDEX idx_user_activities_created_at (created_at),
    INDEX idx_user_activities_session_id (session_id),
    INDEX idx_user_activities_ip_address (ip_address)
);

-- =============================
-- 20. Phi√™n ƒëƒÉng nh·∫≠p
-- =============================
CREATE TABLE user_sessions (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    user_id BIGINT NOT NULL,
    session_id VARCHAR(255) UNIQUE NOT NULL,
    ip_address VARCHAR(45),
    user_agent TEXT,
    device_type VARCHAR(50),
    browser VARCHAR(100),
    os VARCHAR(100),
    country VARCHAR(100),
    city VARCHAR(100),
    login_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    last_activity TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    logged_out_at TIMESTAMP NULL,
    logout_reason VARCHAR(255),
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
    INDEX idx_user_sessions_user_id (user_id),
    INDEX idx_user_sessions_session_id (session_id),
    INDEX idx_user_sessions_is_active (is_active),
    INDEX idx_user_sessions_login_at (login_at),
    INDEX idx_user_sessions_ip_address (ip_address),
    INDEX idx_user_sessions_device_type (device_type),
    INDEX idx_user_sessions_country (country)
);

-- =============================
-- VIEWS - T√≠nh to√°n rating ƒë·ªông
-- =============================

-- View t√≠nh rating v√† review count t·ª´ b·∫£ng reviews
CREATE VIEW tour_ratings AS
SELECT 
    tour_id,
    COUNT(*) as review_count,
    AVG(rating) as average_rating,
    SUM(CASE WHEN rating = 5 THEN 1 ELSE 0 END) as five_star_count,
    SUM(CASE WHEN rating = 4 THEN 1 ELSE 0 END) as four_star_count,
    SUM(CASE WHEN rating = 3 THEN 1 ELSE 0 END) as three_star_count,
    SUM(CASE WHEN rating = 2 THEN 1 ELSE 0 END) as two_star_count,
    SUM(CASE WHEN rating = 1 THEN 1 ELSE 0 END) as one_star_count
FROM reviews
WHERE status = 'Approved'
GROUP BY tour_id;

-- View th·ªëng k√™ tour
CREATE VIEW tour_statistics AS
SELECT 
    t.id,
    t.name,
    t.tour_type,
    t.region,
    t.status,
    COUNT(DISTINCT b.id) as total_bookings,
    SUM(CASE WHEN b.payment_status = 'Paid' THEN 1 ELSE 0 END) as paid_bookings,
    SUM(CASE WHEN b.confirmation_status = 'Cancelled' THEN 1 ELSE 0 END) as cancelled_bookings,
    COALESCE(tr.average_rating, 0) as average_rating,
    COALESCE(tr.review_count, 0) as review_count,
    t.view_count
FROM tours t
LEFT JOIN bookings b ON t.id = b.tour_id
LEFT JOIN tour_ratings tr ON t.id = tr.tour_id
GROUP BY t.id;

-- =============================
-- TRIGGERS - T·ª± ƒë·ªông c·∫≠p nh·∫≠t
-- =============================

-- Trigger t·ª± ƒë·ªông gi·∫£m available_seats khi c√≥ booking m·ªõi
DELIMITER //
CREATE TRIGGER after_booking_insert
AFTER INSERT ON bookings
FOR EACH ROW
BEGIN
    IF NEW.schedule_id IS NOT NULL AND NEW.confirmation_status = 'Confirmed' THEN
        UPDATE tour_schedules 
        SET available_seats = available_seats - (NEW.num_adults + NEW.num_children)
        WHERE id = NEW.schedule_id;
    END IF;
END//

-- Trigger tƒÉng l·∫°i available_seats khi booking b·ªã h·ªßy
CREATE TRIGGER after_booking_cancel
AFTER UPDATE ON bookings
FOR EACH ROW
BEGIN
    IF OLD.confirmation_status != 'Cancelled' 
       AND NEW.confirmation_status = 'Cancelled' 
       AND NEW.schedule_id IS NOT NULL THEN
        UPDATE tour_schedules 
        SET available_seats = available_seats + (NEW.num_adults + NEW.num_children)
        WHERE id = NEW.schedule_id;
    END IF;
END//

-- Trigger t·ª± ƒë·ªông update view_count
CREATE TRIGGER after_tour_view
AFTER INSERT ON user_activities
FOR EACH ROW
BEGIN
    IF NEW.activity_type = 'TOUR_VIEW' THEN
        UPDATE tours 
        SET view_count = view_count + 1
        WHERE id = CAST(NEW.activity_data AS UNSIGNED);
    END IF;
END//

DELIMITER ;

-- =============================
-- K·∫æT TH√öC CSDL
-- =============================
